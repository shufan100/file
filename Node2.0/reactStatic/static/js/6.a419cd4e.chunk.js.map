{"version":3,"sources":["views/page/Demo/FunWriting/context.js","views/page/Demo/FunWriting/childAbout-child.jsx","views/page/Demo/FunWriting/childAbout.jsx","views/page/Demo/FunWriting/childAbout2-child.jsx","views/page/Demo/FunWriting/childAbout2.jsx","views/page/Demo/FunWriting/index.jsx"],"names":["AppContext","React","createContext","ChildAboutChild","useContext","aboutName","hookVal","hookName","className","style","color","fontWeight","Consumer","value","ChildAbout","props","name","childAbout2Child","console","log","this","context","Component","contextType","childAbout2","withRouter","useState","count","setCount","str","setStr","bool","setBool","list","age","states","setStates","id","arr","setArr","useEffect","timer","setInterval","clearInterval","inputRef","useRef","initState","store","getState","app","user","useReducer","state","dispatch","history","useHistory","goRouter","routeName","push","replace","textAlign","padding","min_price","map","i","onClick","data","e","ReactDOM","unmountComponentAtNode","document","getElementById","type","ref","current","addAction","Provider"],"mappings":"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","file":"static/js/6.a419cd4e.chunk.js","sourcesContent":["import React from 'react';\r\nexport const AppContext = React.createContext({});","import React, { useContext } from 'react';\r\nimport { AppContext } from './context.js';\r\n\r\nexport default function ChildAboutChild () {\r\n  // 声明接收context\r\n  const { aboutName, hookVal, hookName } = useContext(AppContext);\r\n  return (\r\n    <div className='grand'>\r\n      <h1 style={{ color: 'red', fontWeight: 'bold' }}>------C后代组件(函数组件)------</h1>\r\n      <h2>我从A组件接收到的用户名：{aboutName}</h2>\r\n      <h4>{hookName} --- {hookVal}</h4>\r\n      {/* 第二种方式 */}\r\n      <AppContext.Consumer>\r\n        {\r\n          value => `第二种方式Consumer(公共):${value.aboutName}--${value.hookName}--${value.hookVal}`\r\n        }\r\n      </AppContext.Consumer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, Fragment } from 'react';\r\nimport { AppContext } from './context.js';\r\nimport ChildAboutChild from './childAbout-child';\r\n\r\nexport default function ChildAbout (props) {\r\n  // 声明接收context\r\n  const { aboutName, hookVal, hookName } = useContext(AppContext);\r\n  return (\r\n    // Fragment：最终不会渲染成dom,渲染后会丢弃,循环可以写key\r\n    <Fragment key={'1'}>\r\n      <div className='child'>\r\n        <h1 style={{ color: 'red', fontWeight: 'bold' }}>----B子组件(函数组件)----</h1>\r\n        <h2>我从A组件接收到的用户名：{aboutName}</h2>\r\n        <h4>{hookName} --- {hookVal}</h4>\r\n        <h4>props接收的值》》》{props.name}</h4>\r\n        <ChildAboutChild />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { AppContext } from './context.js';\r\n\r\nexport default class childAbout2Child extends Component {\r\n  // 声明接收context\r\n  static contextType = AppContext;\r\n  render () {\r\n    console.log(this, 'AppContext');\r\n    const { aboutName, hookName, hookVal } = this.context;\r\n    return (\r\n      <Fragment>\r\n        <div className='grand2'>\r\n          <h1 style={{ color: 'red', fontWeight: 'bold' }}>----C2子组件(类组件)----</h1>\r\n          <h2>我从A组件接收到的用户名：{aboutName}</h2>\r\n          <h4>{hookName} --- {hookVal}</h4>\r\n          {/* 第二种方式 */}\r\n          <AppContext.Consumer>\r\n            {\r\n              value => <span>第二种方式Consumer(公共):{value.aboutName}--{value.hookName}--{value.hookVal}</span>\r\n            }\r\n          </AppContext.Consumer>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AppContext } from './context.js';\r\nimport ChildAbout2Child from './childAbout2-child';\r\n\r\nexport default class childAbout2 extends Component {\r\n  // 声明接收context\r\n  static contextType = AppContext;\r\n  render () {\r\n    const { aboutName, hookName, hookVal } = this.context;\r\n    return (\r\n      <>\r\n        <div className='child2'>\r\n          <h1 style={{ color: 'red', fontWeight: 'bold' }}>----B2子组件(类组件)----</h1>\r\n          <h2>我从A组件接收到的用户名：{aboutName}</h2>\r\n          <h4>{hookName} --- {hookVal}</h4>\r\n          <h4>props接收的值》》》{this.props.name}</h4>\r\n          <ChildAbout2Child />\r\n        </div>\r\n      </ >\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment, useState, useEffect, useRef, useReducer } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n// redux\r\nimport store from '@/store';\r\nimport { addAction } from '@/store/actions';\r\nimport user from '@/store/reducers/user';\r\nimport ChildAbout from './childAbout';\r\nimport ChildAbout2 from './childAbout2';\r\nimport './index.less';\r\nimport { AppContext } from './context.js';\r\n\r\n// -------------------------------useContext共享状态钩子-------------------------------------------------------------------------------------------------\r\n\r\nconst About = props => {\r\n  console.log(props, '路由的三大属性');\r\n  const aboutName = 'Tom';\r\n\r\n  // -------------------------------useState状态钩子-------------------------------------------------------------------------------------------------\r\n  // useState：返回一个数组，第一项变量初始值，第二项是函数\r\n  const [count, setCount] = useState(10);\r\n  const [str, setStr] = useState('小明');\r\n  const [bool, setBool] = useState(false);\r\n  const [states, setStates] = useState({ name: '1', list: [{ age: 18 }] });\r\n  const [arr, setArr] = useState([{ id: 1, name: 'tom' }]);\r\n  const add = () => {\r\n    setCount(count + 1);\r\n  };\r\n  const sub = () => {\r\n    setCount(count - 1); //第一种写法\r\n  };\r\n  const isShow = (e) => {\r\n    setBool(!bool);\r\n  };\r\n\r\n  const editStr = () => {\r\n    setStr('小红');\r\n  };\r\n  const editState = () => {\r\n    const data = { ...states };\r\n    data.name = '修改';\r\n    data.min_price = 100;\r\n    setStates(data);\r\n  };\r\n  const editArr = () => {\r\n    const list = [...arr];\r\n    list.push({ id: 2, name: 'jeery' });\r\n    setArr(list);\r\n\r\n  };\r\n\r\n  // -------------------------------useEffect副作用钩子/模拟生命周期钩子-------------------------------------------------------------------------------------------------\r\n  /**useEffect\r\n   * 1、[]不写：就会监测所有人，dom渲染完、数据更新触发，(和类组件生命周期一样：componentDidMount，componentDidUpdate)\r\n   * 2、[]写了：数据改变不监测，dom渲染完触发, (和类组件生命周期一样：componentDidMount)\r\n   * 3、[count,...]写了：监测count状态，dom渲染完触发,count等更新触发，(和类组件生命周期一样：componentDidMount，componentDidUpdate)\r\n   * 4、返回一个函数：相当于componentWillUnmount生命周期，卸载组件前调用\r\n  */\r\n  useEffect(() => {\r\n    console.log('@');\r\n    let timer = setInterval(() => {\r\n      // setCount(count => count + 1); //需要使用函数式得写法\r\n    }, 1000);\r\n    return () => { // 返回一个函数，相当于componentWillUnmount生命周期\r\n      console.log('卸载组件前');\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  const onMount = () => {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\r\n  };\r\n\r\n  // -------------------------------useRef-------------------------------------------------------------------------------------------------\r\n  const inputRef = useRef();\r\n  const showData = () => {\r\n    console.log(inputRef.current.value, 'inputRef');\r\n    setCount(inputRef.current.value * 1);\r\n  };\r\n\r\n  // -------------------------------useReducer-------------------------------------------------------------------------------------------------\r\n  // 它接受reducer函数和状态的初始值作为参数，返回一个数组，其中第一项为当前的状态值，第二项为发送action的dispatch函数\r\n  let initState = { ...store.getState().app, ...store.getState().user };\r\n  const [state, dispatch] = useReducer(user, initState);\r\n\r\n  const setCountRedux = (value) => {\r\n    // store.dispatch(addAction(value)); // 原生的\r\n    dispatch(addAction(value)); // useReducer的\r\n  };\r\n\r\n\r\n\r\n  // -------------------------------useHistory:路由-------------------------------------------------------------------------------------------------\r\n  const history = useHistory();\r\n  const goRouter = (routeName) => {\r\n    if (routeName === '/home') {\r\n      history.push(routeName);\r\n    }\r\n    if (routeName === '/shopping') {\r\n      // history.replace(`${routeName}/${1}`); //param传参，注册路由需要改\r\n      history.replace(`${routeName}?id=${1068}`);//serach传参\r\n      // history.replace(routeName, { id: 1688 });//stata传参\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', padding: '20px' }}>函数式组件--Hooks</h1>\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useState状态钩子**</h1>\r\n      <h4>number：{count}；string：{str}；boolen：{bool}；object：{states.name}-{states.min_price}；</h4>\r\n      <ul>\r\n        {\r\n          arr.map(i => <li key={i.id}>arr：{i.id}--{i.name}</li>)\r\n        }\r\n\r\n      </ul>\r\n\r\n      <h4>当前求和为{count}</h4>\r\n      <button onClick={add}>+1</button><button onClick={sub}>-1</button><button onClick={() => setCount(99)}>=99</button>\r\n      <button onClick={editStr}>修改字符串</button>\r\n      <button onClick={editState}>修改对象</button>\r\n      <button onClick={editArr}>修改数组</button>\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useEffect副作用钩子/模拟生命周期钩子**</h1>\r\n      {\r\n        bool ? <h4 style={{ color: 'red' }}>显示得文字</h4> : ''\r\n      }\r\n      <h4>--{states.min_price}+{states.min_price}</h4>\r\n\r\n      <button onClick={isShow}>显示/隐藏</button>\r\n      <button onClick={onMount}>卸载组件</button>\r\n\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useRef**</h1>\r\n      <input type=\"text\" ref={inputRef} />\r\n      <button onClick={showData}>点击提示数据</button>\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useReducer:Action钩子**</h1>\r\n      <h4>redux值：{state.count}</h4>\r\n      <button onClick={() => setCountRedux(1)}>函数式Redux +1</button>\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useHistory:路由导航钩子**</h1>\r\n      <button onClick={() => goRouter('/home')}>跳回首页</button>\r\n      <button onClick={() => goRouter('/shopping')}>跳回生命周期</button>\r\n\r\n      <hr />\r\n      <h1 style={{ color: 'red', padding: '20px 100px' }}>**useContext():共享状态钩子**</h1>\r\n      {/* 避免了react逐层通过Props传递数据 */}\r\n      <div className='parent'>\r\n        <h1 style={{ color: 'red', fontWeight: 'bold' }}>--A父组件--</h1>\r\n        <h2>我的用户名：{aboutName}</h2>\r\n        <AppContext.Provider value={{ aboutName: aboutName, hookVal: 'hook测试', hookName: 'About' }}>\r\n          <ChildAbout name={'啊水水水水'} />\r\n          <br />\r\n          <ChildAbout2 name={'啊水水水水'} />\r\n        </AppContext.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 加工函数式组件：给组件添加路由的3大属性：history、loaction、match\r\nexport default withRouter(About);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}