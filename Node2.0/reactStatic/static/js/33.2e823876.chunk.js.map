{"version":3,"sources":["components/NumericInput/index.jsx","views/page/BasisCom/Input/index.jsx"],"names":["formatNumber","value","Intl","NumberFormat","format","NumericInput","props","onChange","title","className","Number","trigger","placement","overlayClassName","e","inputValue","target","test","onBlur","valueTemp","charAt","length","slice","replace","placeholder","maxLength","Option","TextArea","selectBefore","defaultValue","selectAfter","Inputs","useState","setValue","inputRef","useRef","onSearch","val","alert","blur","console","log","defaultActiveKey","ghost","expandIconPosition","Panel","header","extra","SettingOutlined","size","status","disabled","showCount","allowClear","style","width","prefix","UserOutlined","ClockCircleOutlined","suffix","CopyOutlined","addonAfter","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","rows","Search","enterButton","AudioOutlined","loading","addonBefore","onInput","onPressEnter","ref","onClick","current","focus","cursor","preventScroll"],"mappings":"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","file":"static/js/33.2e823876.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input, Tooltip } from 'antd'\r\n\r\nconst formatNumber = value => new Intl.NumberFormat().format(value)\r\n\r\nconst NumericInput = props => {\r\n  const { value, onChange } = props\r\n\r\n  const handleChange = e => {\r\n    const { value: inputValue } = e.target\r\n    const reg = /^-?\\d*(\\.\\d*)?$/\r\n\r\n    if (reg.test(inputValue) || inputValue === '' || inputValue === '-') {\r\n      onChange(inputValue)\r\n    }\r\n  } // '.' at the end or only '-' in the input box.\r\n\r\n  const handleBlur = () => {\r\n    let valueTemp = value\r\n\r\n    if (value.charAt(value.length - 1) === '.' || value === '-') {\r\n      valueTemp = value.slice(0, -1)\r\n    }\r\n\r\n    onChange(valueTemp.replace(/0*(\\d+)/, '$1'))\r\n  }\r\n\r\n  const title = value ? <span className='numeric-input-title'>{value !== '-' ? formatNumber(Number(value)) : '-'}</span> : '输入数字'\r\n  return (\r\n    <Tooltip trigger={['focus']} title={title} placement='topLeft' overlayClassName='numeric-input'>\r\n      <Input {...props} onChange={handleChange} onBlur={handleBlur} placeholder='输入数字' maxLength={25} />\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default NumericInput\r\n","import React, { useState, useRef } from 'react'\r\nimport { Collapse, Input, Select, Space, Cascader, Button } from 'antd'\r\nimport { SettingOutlined, ClockCircleOutlined, UserOutlined, CopyOutlined, EyeTwoTone, EyeInvisibleOutlined, AudioOutlined } from '@ant-design/icons'\r\nimport NumericInput from '@/components/NumericInput'\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\nconst selectBefore = (\r\n  <Select defaultValue='http://' className='select-before'>\r\n    <Option value='http://'>http://</Option>\r\n    <Option value='https://'>https://</Option>\r\n  </Select>\r\n)\r\nconst selectAfter = (\r\n  <Select defaultValue='.com' className='select-after'>\r\n    <Option value='.com'>.com</Option>\r\n    <Option value='.jp'>.jp</Option>\r\n    <Option value='.cn'>.cn</Option>\r\n    <Option value='.org'>.org</Option>\r\n  </Select>\r\n)\r\n\r\nconst Inputs = () => {\r\n  const [value, setValue] = useState('')\r\n  const inputRef = useRef(null)\r\n  const onSearch = val => {\r\n    alert(val)\r\n  }\r\n  const frist = () => {\r\n    inputRef.current.focus({\r\n      cursor: 'start'\r\n    })\r\n  }\r\n  const last = () => {\r\n    inputRef.current.focus({\r\n      cursor: 'end'\r\n    })\r\n  }\r\n  const selectAll = () => {\r\n    inputRef.current.focus({\r\n      cursor: 'all'\r\n    })\r\n  }\r\n  const preventScroll = () => {\r\n    inputRef.current.focus({\r\n      preventScroll: true\r\n    })\r\n  }\r\n  const blur = e => {\r\n    console.log(e.target.value)\r\n  }\r\n  const onChange = e => {\r\n    console.log(e.target.value)\r\n  }\r\n  const onPressEnter = e => {\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='h2Style'>Input组件示例</h2>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='状态' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input placeholder='默认' status='info' />\r\n            <Input placeholder='警告' status='warning' />\r\n            <Input placeholder='失败' status='error' />\r\n            <Input placeholder='禁用' disabled />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='尺寸' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input placeholder='large - 40' size='large' />\r\n            <Input placeholder='default - 32' />\r\n            <Input placeholder='small - 24' size='small' />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='属性' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input defaultValue='input默认值' />\r\n            <Input placeholder='最大长度 + 展示字数' maxLength={100} showCount />\r\n            <Input defaultValue='清空按钮' allowClear />\r\n            {value}\r\n            <NumericInput style={{ width: 240 }} value={value} onChange={setValue} />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='图标' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input prefix={<UserOutlined />} />\r\n            <Input prefix={<ClockCircleOutlined />} />\r\n            <Input suffix={<CopyOutlined />} />\r\n            <Input prefix='￥' suffix='元' />\r\n            <Input addonAfter={<SettingOutlined />} defaultValue='1' />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='密码和文本' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input.Password placeholder='密码输入框' />\r\n            <Input.Password placeholder='密码输入框' iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n            <TextArea rows={2} placeholder='文本域' />\r\n            <TextArea rows={2} placeholder='文本域+最大6行' maxLength={6} />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='搜索' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input.Search placeholder='搜索' />\r\n            <Input.Search placeholder='input search text' enterButton suffix={<AudioOutlined />} />\r\n            <Input.Search placeholder='input search text' enterButton />\r\n            <Input.Search placeholder='搜索+loading' loading />\r\n            <Input.Search placeholder='input search text' enterButton loading />\r\n            <Input.Search placeholder='input search text' enterButton='Search' loading />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='前置/后置标签' key='1' extra={<SettingOutlined />}>\r\n          <Space size={15}>\r\n            <Input addonBefore='http://' addonAfter='.com' defaultValue='1' />\r\n            <Input addonBefore={selectBefore} addonAfter={selectAfter} defaultValue='1' />\r\n            <Input addonAfter={<SettingOutlined />} defaultValue='1' />\r\n            <Input addonBefore='http://' suffix='.com' defaultValue='1' />\r\n            <Input addonBefore={<Cascader placeholder='cascader' style={{ width: 150 }} />} defaultValue='1' />\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      {/* ---------------------------------------------------------------------------------------------------------------------- */}\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='输入框事件' key='1' extra={<SettingOutlined />}>\r\n          <Input.Search placeholder='清除事件' defaultValue='allowClear清除事件' allowClear onSearch={onSearch} />\r\n          <br />\r\n          <br />\r\n          <Input placeholder='失焦事件' onBlur={blur} />\r\n          <br />\r\n          <br />\r\n          <Input placeholder='input事件' onInput={blur} />\r\n          <br />\r\n          <br />\r\n          <Input placeholder='change事件' onChange={onChange} />\r\n          <br />\r\n          <br />\r\n          <Input placeholder='回车事件' onPressEnter={onPressEnter} />\r\n          <br />\r\n          <br />\r\n          <Input.Search ref={inputRef} placeholder='聚焦第一个' defaultValue='初始值' enterButton='search' onSearch={onSearch} />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <Button onClick={frist}>聚焦第一个</Button>&nbsp;\r\n            <Button onClick={last}>聚焦最后一个</Button>&nbsp;\r\n            <Button onClick={selectAll}>全部选中</Button>&nbsp;\r\n            <Button onClick={preventScroll}>Focus prevent scroll</Button>&nbsp;\r\n          </div>\r\n          <Input ref={inputRef} defaultValue='初始值' />\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n      {/* <Divider orientation='conter' orientationMargin={100} dashed>\r\n        ***输入框事件***\r\n      </Divider>\r\n      <Space size={15} direction='vertical'>\r\n        <Input.Search placeholder='清除事件' defaultValue='清除事件' allowClear onSearch={onSearch} />\r\n        <Input placeholder='失焦事件' onBlur={blur} />\r\n        <Input placeholder='input事件' onInput={blur} />\r\n        <Input placeholder='change事件' onChange={onChange} />\r\n        <Input placeholder='回车事件' onPressEnter={onPressEnter} />\r\n        <Input.Search ref={inputRef} placeholder='聚焦第一个' defaultValue='初始值' enterButton='search' onSearch={onSearch} />\r\n        <div>\r\n          <Button onClick={frist}>聚焦第一个</Button>&nbsp;\r\n          <Button onClick={last}>聚焦最后一个</Button>&nbsp;\r\n          <Button onClick={selectAll}>全部选中</Button>&nbsp;\r\n          <Button onClick={preventScroll}>Focus prevent scroll</Button>&nbsp;\r\n        </div>\r\n        <Input ref={inputRef} defaultValue='初始值' />\r\n      </Space> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inputs\r\n"],"sourceRoot":""}