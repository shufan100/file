{"version":3,"sources":["assets/images/Effect.png","views/page/Demo/LifeCycle/LifeCycleFun/index.jsx"],"names":["LifeCycleFun","timer1","useState","title","count","states","setStates","num","setNum","opacity","setOpacity","colors","setColor","date","setDate","useEffect","console","log","data","setInterval","clearInterval","timer","Date","y","getFullYear","m","getMonth","d","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","str","add","e","type","onClick","ReactDOM","unmountComponentAtNode","document","getElementById","src","effectImg","alt","style","color"],"mappings":"iLAAe,MAA0B,mC,OCsG1BA,UAlGM,WACnB,IAoBIC,EApBJ,EAA4BC,mBAAS,CACnCC,MAAO,GACPC,MAAO,IAFT,mBAAOC,EAAP,KAAeC,EAAf,KAIA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA2BR,mBAAS,OAApC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAGAC,qBAAU,WACRC,QAAQC,IAAI,wCACZ,IAAMC,EAAI,eAAQb,GAGlB,OAFAa,EAAKf,MAAQ,yCACbG,EAAUY,GACH,WACLF,QAAQC,IAAI,2CAEb,IAGHF,qBAAU,WASR,OARAd,EAASkB,aAAY,WACnBT,EAAWD,EAAU,IACjBA,EAAU,IAAKG,EAAS,QACxBH,EAAU,KACZC,EAAW,GACXE,EAAS,UAEV,KACI,kBAAMQ,cAAcnB,MAC1B,CAACQ,IAEJM,qBAAU,WACR,IAAIM,EAAQF,aAAY,WACtB,IAAIN,EAAO,IAAIS,KACTC,EAAIV,EAAKW,cACTC,EAAIZ,EAAKa,WAAa,EACtBC,EAAId,EAAKe,UACTC,EAAKhB,EAAKiB,WACVC,EAAKlB,EAAKmB,aACVC,EAAKpB,EAAKqB,aACZC,EAAG,UAAMZ,EAAN,YAAWE,EAAX,YAAgBE,EAAhB,YAAqBE,EAArB,YAA2BE,EAA3B,YAAiCE,GACxCjB,QAAQC,IAAIkB,GACZrB,EAAQqB,KACP,KACH,OAAO,kBAAMf,cAAcC,MAC1B,CAACR,IAEJ,IAQMuB,EAAM,SAACC,EAAGC,GACd,IAAIpB,EAAI,eAAQb,GACH,MAATiC,EACFpB,EAAKd,SAELc,EAAKd,QACDc,EAAKd,MAAQ,IAAGc,EAAKd,MAAQ,IAEnCE,EAAUY,IAQZ,OACE,gCACE,6BAAKb,EAAOF,QACZ,sDAAUE,EAAOD,SAFnB,QAGE,wBAAQmC,QAAS,SAAAF,GAAC,OAAID,EAAIC,EAAG,MAA7B,oBAHF,WAIE,wBAAQE,QAAS,SAAAF,GAAC,OAAID,EAAIC,EAAG,MAA7B,oBAJF,YAKE,wBAAQE,QAAS,SAAAF,GAAC,OAAI7B,EAAOD,EAAM,IAAnC,SAAwCA,IAL1C,WAME,wBAAQgC,QAAS,WA9BnBC,IAASC,uBAAuBC,SAASC,eAAe,UA8BtD,sCAA+C,uBANjD,QASE,gCACE,oGACA,qBAAKC,IAAKC,EAAWC,IAAI,QAX7B,OAcE,gCACE,sCACA,sBAAMC,MAAO,CAAEtC,QAASA,EAASuC,MAAOrC,GAAxC,0CACA,wBAAQ4B,QAAS,WArBrBnB,cAAcnB,IAqBV,sCACA,sDAAUY","file":"static/js/9.888b52b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Effect.d206981d.png\";","import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport effectImg from '@/assets/images/Effect.png'\r\n\r\nconst LifeCycleFun = () => {\r\n  const [states, setStates] = useState({\r\n    title: '',\r\n    count: 0\r\n  })\r\n  const [num, setNum] = useState(10)\r\n  const [opacity, setOpacity] = useState(1)\r\n  const [colors, setColor] = useState('red')\r\n  const [date, setDate] = useState('')\r\n\r\n  // 初始化\r\n  useEffect(() => {\r\n    console.log('组件挂载完毕')\r\n    const data = { ...states }\r\n    data.title = '生命周期(函数)'\r\n    setStates(data)\r\n    return () => {\r\n      console.log('组件卸载之前')\r\n    }\r\n  }, [])\r\n  // 渐变\r\n  let timer1;\r\n  useEffect(() => {\r\n    timer1 = setInterval(() => {\r\n      setOpacity(opacity - 0.1)\r\n      if (opacity < 0.8) setColor('#000')\r\n      if (opacity < 0.1) {\r\n        setOpacity(1)\r\n        setColor('red')\r\n      }\r\n    }, 200);\r\n    return () => clearInterval(timer1);\r\n  }, [opacity])\r\n  // 时间\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let date = new Date()\r\n      const y = date.getFullYear()\r\n      const m = date.getMonth() + 1\r\n      const d = date.getDate()\r\n      const hh = date.getHours()\r\n      const mm = date.getMinutes()\r\n      const ss = date.getSeconds()\r\n      let str = `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n      console.log(str)\r\n      setDate(str)\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [date])\r\n  //卸载组件\r\n  const unMount = () => {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\r\n  }\r\n\r\n\r\n\r\n  // -------------------------------------------------------------\r\n  //计算\r\n  const add = (e, type) => {\r\n    let data = { ...states }\r\n    if (type === '+') {\r\n      data.count++\r\n    } else {\r\n      data.count--\r\n      if (data.count < 0) data.count = 0\r\n    }\r\n    setStates(data)\r\n\r\n  };\r\n  // 清除计时器\r\n  const clear = (e) => {\r\n    clearInterval(timer1)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{states.title}</h1>\r\n      <span>计算：{states.count}</span> &nbsp;\r\n      <button onClick={e => add(e, '+')}>加</button>&nbsp;&nbsp;\r\n      <button onClick={e => add(e, '-')}>减</button> &nbsp;&nbsp;\r\n      <button onClick={e => setNum(num / 2)}>{num}</button>&nbsp;&nbsp;\r\n      <button onClick={() => unMount()}>卸载组件</button><br /> &nbsp;\r\n\r\n\r\n      <div>\r\n        <h3>初始化、更新、卸载前：</h3>\r\n        <img src={effectImg} alt=\"\" />\r\n      </div>&nbsp;\r\n\r\n      <div>\r\n        <h3>Demo</h3>\r\n        <span style={{ opacity: opacity, color: colors }}>DEMODEMODEMODEMODEMODEMODEMO</span>\r\n        <button onClick={() => clear()}>暂停渐变</button>\r\n        <span>时间：{date}</span>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\nexport default LifeCycleFun;\r\n"],"sourceRoot":""}