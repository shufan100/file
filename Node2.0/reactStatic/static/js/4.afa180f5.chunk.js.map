{"version":3,"sources":["../node_modules/_pubsub-js@1.9.4@pubsub-js/src/pubsub.js","views/page/Demo/ClassWriting/components/jsx/hasError.jsx","views/page/Demo/ClassWriting/components/jsx/index.jsx","views/page/Demo/ClassWriting/components/click/index.jsx","views/page/Demo/ClassWriting/components/diff/index.jsx","views/page/Demo/ClassWriting/components/ref/index.jsx","views/page/Demo/ClassWriting/components/axios/Aaxios.jsx","views/page/Demo/ClassWriting/components/axios/Baxios.jsx","views/page/Demo/ClassWriting/index.jsx"],"names":["root","factory","PubSub","console","warn","messages","lastUid","ALL_SUBSCRIBING_MSG","hasKeys","obj","key","Object","prototype","hasOwnProperty","call","throwException","ex","callSubscriberWithDelayedExceptions","subscriber","message","data","setTimeout","callSubscriberWithImmediateExceptions","deliverMessage","originalMessage","matchedMessage","immediateExceptions","s","subscribers","callSubscriber","createDeliveryFunction","topic","String","position","lastIndexOf","substr","hasDirectSubscribersFor","Boolean","messageHasSubscribers","found","publish","sync","deliver","toString","publishSync","subscribe","func","token","subscribeAll","subscribeOnce","unsubscribe","apply","this","arguments","clearAllSubscriptions","clearSubscriptions","m","indexOf","countSubscriptions","count","getSubscriptions","list","push","value","t","descendantTopicExists","isTopic","isToken","isFunction","result","undefined","module","exports","window","HasErrorDemo","state","map","i","index","React","Component","JsxDemo","isShow","hasError","setShow","setState","log","onClick","style","color","error","ClickDemo","demo1","demo2","param","demo","bind","connect","user","DiffDemo","personList","id","name","age","addPerson","item","type","RefDemo","myRef","createRef","showData","input1","refs","showData2","input2","saveInputRef","currentNode","input3","showData3","showData4","current","showData5","e","target","ref","onBlur","placeholder","AxiosDemo","getStudentsData","axios","get","then","response","getCarsData","search","a","keyWord","keyWordDone","loading","url","fetch","json","items","err","c","Baxios","msg","length","widith","height","borderRadius","src","avatar_url","alt","LayoutContentClass","opacity","sex","address","newsArr","addCount","addCount2","props","nextProps","nextState","listRef","scrollHeight","preProps","preState","scrollTop","clearInterval","timer2","className","textAlign","n","Aaxios"],"mappings":"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","file":"static/js/4.afa180f5.chunk.js","sourcesContent":["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n\n    if (root.PubSub) {\n        PubSub = root.PubSub;\n        console.warn(\"PubSub already loaded, using existing version\");\n    } else {\n        root.PubSub = PubSub;\n        factory(PubSub);\n    }\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n","import React from 'react';\r\nclass HasErrorDemo extends React.Component {\r\n  state = {\r\n    list: [1, 2, 3]\r\n    // list: null,\r\n  };\r\n  render () {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {this.state.list.map((i, index) =>\r\n            <li key={index}>{i}</li>\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HasErrorDemo;\r\n","import React, { Component } from 'react';\r\nimport HasErrorDemo from './hasError';\r\nclass JsxDemo extends Component {\r\n  state = {\r\n    isShow: true,\r\n    list: ['Angular', 'React', 'Vue'],\r\n    hasError: null\r\n  };\r\n\r\n  // 错误边界：生命周期函数，一旦后代组件发生错误就会触发(只是用生产环境)\r\n  static getDerivedStateFromError (error) {\r\n    return { hasError: error };\r\n  }\r\n  componentDidCatch () {\r\n    console.log('统计页面错误，发送请求给后台');\r\n  }\r\n\r\n  // ------------------setState-------------------------------------\r\n  setShow = () => {\r\n    // 严重注意：state必须通过setState进行更新，且更新的动作好是合并\r\n    this.setState({\r\n      isShow: !this.state.isShow\r\n    });\r\n    // this.props.speak('子组件传的参数'); //props传入的函数\r\n  };\r\n  render () {\r\n    const { isShow, list } = this.state;\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h2>*****Jsx写法*****</h2>\r\n        {/************  jsx结构内只能写表达式 、或者有返回值得语句（代码）***************/}\r\n\r\n        {/************************* 三元表达式 *****************************************************************/}\r\n        {isShow ? <span>控制功能块现实隐藏</span> : ''}\r\n        <button onClick={this.setShow}>显示/隐藏</button>\r\n\r\n        {/************************* for循环 / if判断  *****************************************************************/}\r\n        <ul>\r\n          {list.map((i, index) =>\r\n            i !== 'Angular' ? <li key={index}>{i}</li> : ''\r\n          )}\r\n        </ul>\r\n        {/************************* 子组件错误提示  *****************************************************************/}\r\n        {this.state.hasError ? <h2 style={{ color: 'red' }}>当前网络不稳定，稍后再试！</h2> : <HasErrorDemo />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JsxDemo;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ClickDemo extends Component {\r\n  state = {}\r\n  // ------------------click写法传参-------------------------------------\r\n  demo () {\r\n    console.log('按钮1', this);\r\n  }\r\n  demo1 = () => {\r\n    console.log('按钮2', this);\r\n\r\n  }\r\n  demo2 = (param) => {\r\n    console.log('按钮3', param, this);\r\n\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h2>*****Click写法****</h2>\r\n        {/* \r\n          <button onClick={this.demo}>按钮1</button> \r\n          1、demo方法放在哪里?  —— LayoutContent的原型对象上，供实例使用\r\n          2、由于demo是作为onClick的回调，所有不是通过实例调用的，是直接调用\r\n          3、类中的方法默认开启局部的严格模式，所以demo方法的this为undefined\r\n          4、事件不能采用 return false 的方式来阻止浏览器的默认行为，而必须要地明确地调用preventDefault()来阻止默认行为\r\n        */}\r\n        <button onClick={this.demo.bind(this)}>按钮1</button>\r\n        <button onClick={this.demo1}>按钮2</button>\r\n        <button onClick={() => this.demo2('参数')}>按钮3</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user)(ClickDemo);","import React, { Component } from 'react';\r\nclass DiffDemo extends Component {\r\n  state = {\r\n    personList: [\r\n      { id: 1, name: '小子', age: 18 },\r\n      { id: 2, name: '小李', age: 19 }\r\n    ]\r\n  }\r\n\r\n  addPerson = () => {\r\n    const { personList } = this.state;\r\n    const obj = { id: 3, name: '小王', age: 20 };\r\n    this.setState({ personList: [obj, ...personList] });\r\n  }\r\n\r\n  /**\r\n  慢动作回放  -- 使用index索引值做key的问题\r\n    初始化数据：\r\n      { id: 1, name: '小子', age: 18 }\r\n      { id: 2, name: '小李', age: 19 }\r\n    初始的虚拟DOM:\r\n      <li key=0> 小子 --- 18 </li>\r\n      <li key=1> 小李 --- 18 </li>\r\n   \r\n    添加小王 更新后的数据：\r\n      { id: 3, name: '小王', age: 20 }\r\n      { id: 1, name: '小子', age: 18 }\r\n      { id: 2, name: '小李', age: 19 }\r\n    更新数据后的虚拟DOM:  （把小王数据放在前面渲染，索引变了，那么旧的虚拟dom的key与新的虚拟dom的内容不一样，就创建新的真的dom替换页面中的dom，这就照成性能问题）\r\n      <li key=0> 小王 --- 18 </li>\r\n      <li key=1> 小子 --- 18 </li>\r\n      <li key=2> 小李 --- 18 </li>\r\n   */\r\n\r\n  render () {\r\n    const { personList } = this.state;\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h2>*****diff****</h2>\r\n        <h1>diff算法 -- 使用 index作为索引</h1>\r\n        <ul>\r\n          {\r\n            personList.map((item, index) => <li key={index}>{item.name} --- {item.age} <input type='text' /></li>)\r\n          }\r\n        </ul>\r\n        <h1>diff算法 -- 使用 id作为索引</h1>\r\n        <ul>\r\n          {\r\n            personList.map((item, index) => <li key={item.id}>{item.name} --- {item.age} <input type='text' /></li>)\r\n          }\r\n        </ul>\r\n        <button onClick={this.addPerson}>添加</button><br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiffDemo;","import React, { Component } from 'react';\r\nclass RefDemo extends Component {\r\n  state = {}\r\n  // 创建ref容器，一个容器对应一个\r\n  myRef = React.createRef();\r\n\r\n  // 字符串ref(弃用)\r\n  showData = () => {\r\n    // ref弃用，效率不高，\r\n    const { input1 } = this.refs;\r\n    console.log(input1.value);\r\n  }\r\n\r\n  // 内联ref\r\n  showData2 = () => {\r\n    console.log(this, this.input2.value);\r\n  }\r\n\r\n  // 内联ref写出外写函数(开发推荐内联)\r\n  saveInputRef = (currentNode) => {\r\n    this.input3 = currentNode;\r\n  }\r\n  showData3 = () => {\r\n    console.log(this.input3.value);\r\n  }\r\n\r\n  // createdRef (最推荐)\r\n  showData4 = () => {\r\n    console.log(this.myRef.current.value);\r\n  }\r\n  showData5 = (e) => {\r\n    // e.target指对应的dom节点（input（5））\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h2>*****Ref****</h2>\r\n        {/* refs: 弃用ref字符串写法，效率不高；建议使用回调函数和createRef写法代替 /}\r\n        {/* <input ref='input1' type=\"text\" placeholder='点击提示数据' />&nbsp;\r\n        <button onClick={this.showData}>提示左侧数据</button>&nbsp; */}\r\n        {/*内联: a是input节点， this.input2 = a：this是LayoutContent实例对象，在实例对象上加个input2实例，然后将节点a赋值给input2*/}\r\n        <input ref={currentNode => this.input2 = currentNode} onBlur={this.showData2} type=\"text\" placeholder='失焦提示数据' />{/* (开发推荐内联) */}\r\n        {/* 不内联：内联会触发2次，要calss绑定的方式就不会 */}\r\n        <input ref={this.saveInputRef} onBlur={this.showData3} type=\"text\" placeholder='失焦提示数据3' />\r\n        {/* createdRef */}\r\n        <input ref={this.myRef} onBlur={this.showData4} type=\"text\" placeholder='失焦提示数据4' />\r\n        {/* 避免过度使用ref */}\r\n        <input onBlur={this.showData5} type=\"text\" placeholder='失焦提示数据5' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RefDemo;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PubSub from 'pubsub-js';\r\n\r\nclass AxiosDemo extends Component {\r\n  state = {}\r\n  // 获取学生数据\r\n  getStudentsData = () => {\r\n    axios.get('/api1/students').then(\r\n      response => { window.console.log(response, '请求成功了！'); },\r\n      error => { window.console.log(error, '请求失败了！'); }\r\n    );\r\n  }\r\n  // 获取汽车数据\r\n  getCarsData = () => {\r\n    axios.get('/api2/cars').then(\r\n      response => { window.console.log(response, '请求成功了！'); },\r\n      error => { window.console.log(error, '请求失败了！'); }\r\n    );\r\n  }\r\n  // 搜索\r\n  search = async (type) => {\r\n    window.console.log(type);\r\n    // const obj = { a: { b: { c: 1 } } };\r\n    // const { a: { b: { c } } } = obj;  // 连续解构赋值\r\n    // const { a: { b: { c: data } } } = obj;  // 连续解构赋值 && 重命名\r\n    // window.console.log(c, data);\r\n\r\n    const { keyWordDone: { value: keyWord } } = this;\r\n    // window.console.log(this.keyWordDone.value, keyWord);\r\n\r\n    // 消息订阅发送\r\n    PubSub.publish('Aaxios', { name: 'tom', age: 18, list: [], loading: true });\r\n\r\n    // github后端用cos解决跨域了,不用前端做代理\r\n    const url = type === 'success' ? 'users' : 'users11';\r\n    // axios.get(`https://api.github.com/search/${url}?q=${keyWord}`).then(\r\n    //   response => {\r\n    //     window.console.log(response, '请求成功了！');\r\n    //     PubSub.publish('Aaxios', { name: 'tom', age: 18, list: response.data.items, loading: false, err: '' });\r\n    //   },\r\n    //   error => {\r\n    //     window.console.log(error, '请求失败了！');\r\n    //     PubSub.publish('Aaxios', { name: 'tom', age: 18, list: [], loading: false, err: error.message });\r\n    //   }\r\n    // );\r\n\r\n    // fetch 未优化\r\n    // fetch(`https://api.github.com/search/${url}?q=${keyWord}`).then(\r\n    //   // 这个里面返回的不是promise就会再走第二个then\r\n    //   response => {\r\n    //     window.console.log(response, '联系服务器成功！');\r\n    //     return response.json();\r\n    //   },\r\n    //   // error => {\r\n    //   //   window.console.log(error, '联系服务器失败了！'); //其实是有返回值，返回值是undefined\r\n    //   //   return new Promise(() => { });  // 中断promise链，返回一个新的promise实例就不会往下走了\r\n    //   // }\r\n    // ).then(\r\n    //   response => { window.console.log(response, '获取数据成功了222！'); },\r\n    //   // error => { window.console.log(error, '获取数据失败222！'); },\r\n    // ).catch(\r\n    //   error => { window.console.log(error); }\r\n    // );\r\n\r\n    // fetch 优化  try成功返回， catch失败返回，会带错误回调\r\n    try {\r\n      const response = await fetch(`https://api.github.com/search/${url}?q=${keyWord}`);\r\n      const data = await response.json();\r\n      window.console.log('请求成功', data);\r\n      PubSub.publish('Aaxios', { name: 'tom', age: 18, list: response.data.items, loading: false, err: '' });\r\n\r\n    } catch (error) {\r\n      window.console.log('请求出错', error);\r\n      PubSub.publish('Aaxios', { name: 'tom', age: 18, list: [], loading: false, err: error.message });\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h2>*****A-axios(消息订阅发送)****</h2>\r\n        <button onClick={this.getStudentsData}>获取学生数据</button>\r\n        <button onClick={this.getCarsData}>获取汽车数据</button><br />\r\n        <br />\r\n        <input ref={c => this.keyWordDone = c} type=\"text\" placeholder='输入关键词点击搜索' />\r\n        <button onClick={() => this.search('success')}>成功搜索</button>\r\n        <button onClick={() => this.search('error')}>失败搜索</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AxiosDemo;","import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class Baxios extends Component {\r\n  state = {\r\n    name: '',\r\n    age: '',\r\n    list: [],\r\n    loading: false,\r\n    err: ''\r\n  }\r\n  componentDidMount () {\r\n    // 接收还能拿到消息订阅的token  // 消息订阅发送\r\n    this.token = PubSub.subscribe('Aaxios', (msg, data) => {\r\n      console.log(msg, data);\r\n      // this.setState({ ...data });\r\n      this.setState(data);\r\n    });\r\n  }\r\n  // 注销消息订阅\r\n  componentWillUnmount () {\r\n    PubSub.unsubscribe(this.token);\r\n  }\r\n  render () {\r\n    const { name, age, list, loading, err } = this.state;\r\n    console.log(list, 'list');\r\n    return (\r\n      <div>\r\n        <h2>*****B-axios(消息订阅接收)****</h2>\r\n        {name && age ? <div>{name}---{age}</div> : ''}\r\n        {\r\n          loading ? <h2>Loading......</h2> :\r\n            err ? <h2 style={{ color: 'red' }}>{err}</h2> :\r\n              list.length === 0 ? '暂无数据' :\r\n                list.map(i => <img style={{ widith: '100px', height: '100px', borderRadius: '50%' }} src={i.avatar_url} key={i.id} alt=\"\" />)\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// PureComponent代替component，阀门生命周期的就不用写了，PureComponent会自动写好阀门的对比逻辑：从而提示组件在数据没变化的时候不会render组件\r\n// import React, { Component, PureComponent } from 'react';\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button } from 'antd';\r\nimport './index.scss';\r\n\r\n// 引用事例\r\nimport JsxDemo from './components/jsx';\r\nimport ClickDemo from './components/click';\r\nimport DiffDemo from './components/diff';\r\nimport RefDemo from './components/ref';\r\n\r\n\r\nimport AaxiosDemo from './components/axios/Aaxios';\r\nimport BaxiosDemo from './components/axios/Baxios';\r\n\r\n\r\n// ---------------------------------类式组件-----------------------------------------------------------\r\n\r\n// class LayoutContentClass extends PureComponent {\r\nclass LayoutContentClass extends Component {\r\n  // 渲染1次 构造器能省略就省略不写\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   // this.state= {name:'11'}\r\n  //   // this.add = this.add.bind(this)\r\n  //   // console.log('Content-constructor');\r\n  // }\r\n\r\n  // *********初始化状态state**********************************************************\r\n  state = {\r\n    opacity: 1,\r\n    sex: '女',\r\n    address: '中国北京。。。',\r\n    count: 0,\r\n    newsArr: [],\r\n    hasError: ''\r\n  };\r\n\r\n  // {/************************* setState *****************************************************************/}\r\n  // 对象式setState：如果新状态不依赖于原状态，比如点击直接等于99\r\n  addCount = () => {\r\n    this.setState({ count: 99 });\r\n  };\r\n  // 函数式setState：如果新状态依赖于原状态 ===> 使用函数方式，修改原来的数据\r\n  addCount2 = () => {\r\n    // 1、setState函数式写法\r\n    this.setState((state, props) => {\r\n      console.log(state, props);\r\n      return { count: state.count + 1 };\r\n    });\r\n    // 2、setState对象式写法\r\n    // const { count } = this.state;\r\n    // this.setState({ count: count + 1 });\r\n  };\r\n\r\n  // {/************************* 生命周期函数 *****************************************************************/}\r\n  // （阀门）控制组件更新的阀门; state状态改变触发的生命周期钩子\r\n  // (开发不用写，使用PureComponent代替，会自动给我们匹配)\r\n  shouldComponentUpdate (nextProps, nextState) {\r\n    // 不写，react默认会在后台加这钩子并返回true,写了返回false,生命周期就不往下走了\r\n    // this.props,this.state：修改数据前的props和state\r\n    // nextProps,nextState：修改后的变化的props,state\r\n    // 数据不改变就不更当前新组件\r\n    console.log('Content-shouldComponentUpdate');\r\n    // console.log(this.state.count, nextState.count);\r\n    // return !this.state.count === nextState.count; //根据数据是否改变，来渲染组件\r\n    return true; //根据数据是否改变，来渲染组件\r\n  }\r\n\r\n  // 组件挂载完毕的钩子（mounted）(*常用*)  初始化，发生ajax\r\n  componentDidMount () {\r\n    console.log('Content-componentDidMount');\r\n    // this.timer2 = setInterval(() => {\r\n    //   const { newsArr } = this.state;\r\n    //   const news = `新闻${newsArr.length + 1}`;\r\n    //   this.setState({ newsArr: [news, ...newsArr] });\r\n    // }, 1000);\r\n  }\r\n  // (新增) 当组件的数据完全使用props传递进来的才用的生命周期钩子\r\n  static getDerivedStateFromProps (props, state) {\r\n    console.log('Content-getDerivedStateFromProps');\r\n    return null;\r\n  }\r\n  // (新增)的两个生命周期钩子：\r\n  getSnapshotBeforeUpdate () {\r\n    console.log('Content-getSnapshotBeforeUpdate');\r\n    return this.listRef.scrollHeight;\r\n  }\r\n  // 组件已经更新生命周期钩子\r\n  componentDidUpdate (preProps, preState, height) {\r\n    // console.log('Content-componentDidUpdate'); //111\r\n    // this.refs.list.scrollTop += this.refs.list.scrollHeight - height;\r\n    this.listRef.scrollTop += this.listRef.scrollHeight - height;\r\n  }\r\n\r\n  // 组件将要卸载的钩子  (*常用*)\r\n  componentWillUnmount () {\r\n    clearInterval(this.timer2);\r\n    console.log('Content-componentWillUnmount');\r\n  }\r\n\r\n\r\n\r\n  // 1、初始化渲染,状态更新之后渲染 、(渲染 1+n次，每次修改数据都会重新渲染 jsx)\r\n  // 2、在class类内部定义的方法已经自动开启了严格模式，类内部方法的this不指向window\r\n  render () {\r\n    // render中的this —— LayoutContent的实例对象\r\n    return (\r\n      //下面的结构不是真正的html，是jsx,虚拟dom，需要ReactDOMx渲染成真实的html标签显示在页面\r\n      <div className=\"layoutContent\" id='LayoutContentClass'>\r\n        <h1 style={{ color: 'red', textAlign: 'center' }}>类式组件写法</h1>\r\n        {/*************************  事例+getSnapshotBeforeUpdate *****************************************************************/}\r\n        {/* <div className='list' ref='list'> */}\r\n        <div className=\"list\" ref={c => this.listRef = c}>\r\n          {this.state.newsArr.map((n, index) =>\r\n            <div key={index} className=\"news\"> {n}  </div>\r\n          )}\r\n        </div>\r\n\r\n        <JsxDemo />\r\n        {/* 批量props传值：展开运算符的写法是一个个写的语法糖 */}\r\n        <ClickDemo />\r\n        <DiffDemo />\r\n        <RefDemo />\r\n\r\n\r\n        <AaxiosDemo />\r\n        <BaxiosDemo />\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// connect用这个方法reducers才监听的到\r\nexport default connect(state => state.user)(LayoutContentClass);\r\n"],"sourceRoot":""}