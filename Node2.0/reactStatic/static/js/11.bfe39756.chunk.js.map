{"version":3,"sources":["views/page/Demo/ReduxWriting/components/ReduxClass/index.jsx","views/page/Demo/ReduxWriting/components/ReduxFun/index.jsx","views/page/Demo/ReduxWriting/components/ReduxDemo/index.jsx","assets/images/redux.png","views/page/Demo/ReduxWriting/index.jsx"],"names":["ReduxClass","data","console","log","this","props","setCount","title","count","resetCount","setCountAsync","onClick","e","add","ref","c","sectionNode","value","Component","connect","state","fun","setCount1","selectVal","useRef","current","ReduxDemo","listIndex","inputChange","store","dispatch","resetInputAction","target","reset","type","deleteItem1","index","deleteItemAction","handleCheck","id","obj","done","checked","editItemAction","handleMouse","flag","setState","statelList","inputVal","checkAllItemAction","getState","placeholder","className","onChange","style","width","icon","PlusOutlined","CloseOutlined","itemLayout","dataSource","renderItem","item","Item","backgroundColor","onMouseEnter","onMouseLeave","Meta","avatar","src","name","description","display","filter","i","length","user","textAlign","margin","border","reduxImg","alt"],"mappings":"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","file":"static/js/11.bfe39756.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import store from '@/store';\r\nimport { setCount, resetCount, setCountAsync } from '@/store/actions'\r\n\r\n\r\nclass ReduxClass extends Component {\r\n\r\n  // 方法-----------------------------------\r\n  add (data) {\r\n    console.log(11111111111, data)\r\n    // store.dispatch(setCount(data)) //原始写法\r\n    this.props.setCount(data)\r\n  }\r\n\r\n  render () {\r\n    const { title, count } = this.props //redures值\r\n    const { setCount, resetCount, setCountAsync } = this.props //action方法\r\n    // console.log(this)\r\n    return (\r\n      <div>\r\n        <h1>{title}(类式组件)</h1>\r\n        {/* \r\n          1、第一步：获取Redures的值\r\n            1-1、通过connect连接redures,值在props里\r\n          2、第二步：修改Redures的值\r\n            2-1、引入action方法,通过connect连接action,方法在props里\r\n            2-2、dispatch是通过store中间商去处理redures值（因为使用了redux-thunk中间件，所有可以省略写dispatch）\r\n        */}\r\n        <span>总计：{count}</span> &nbsp;\r\n        <button onClick={e => this.add('1')}>add+1</button> &nbsp;\r\n        <button onClick={e => setCount('2')}>add+2</button> &nbsp;\r\n        <button onClick={e => setCountAsync(3)}>asyncAdd+3</button> &nbsp;\r\n        <button onClick={e => resetCount()}>reset</button> &nbsp;\r\n        <select ref={c => this.sectionNode = c}>\r\n          <option value=\"11\">11</option>\r\n          <option value=\"22\">22</option>\r\n          <option value=\"33\">33</option>\r\n        </select>&nbsp;\r\n        <button onClick={e => setCount(this.sectionNode.value)}>selectAdd</button> &nbsp;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// redures\\action接收的都是对象\r\nexport default connect(state => state.fun, { setCount, resetCount, setCountAsync })(ReduxClass);","import React, { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import store from '@/store';\r\nimport { setCount, setCountAsync, resetCount } from '@/store/actions'\r\n\r\n\r\nfunction ReduxFun (props) {\r\n  const selectVal = useRef()\r\n  const { title, count } = props //redures值\r\n  const { setCount1, setCountAsync, resetCount } = props //actions方法\r\n\r\n  const add = data => {\r\n    // store.dispatch(setCount(data))\r\n    console.log(selectVal.current.value, 'selectVal')\r\n    setCount1(data)\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>{title}(函数式组件)</h1>\r\n\r\n      <span>总计：{count}</span> &nbsp;\r\n      <button onClick={e => add('1')}>add+1</button> &nbsp;\r\n      <button onClick={e => setCount1('2')}>add+2</button> &nbsp;\r\n      <button onClick={e => setCountAsync(3)}>asyncAdd+3</button> &nbsp;\r\n      <button onClick={e => resetCount()}>reset</button> &nbsp;\r\n      <select ref={selectVal}>\r\n        <option value=\"11\">11</option>\r\n        <option value=\"22\">22</option>\r\n        <option value=\"33\">33</option>\r\n      </select>&nbsp;\r\n      <button onClick={e => setCount1(selectVal.current.value)}>selectAdd</button> &nbsp;\r\n    </div>\r\n  )\r\n}\r\nconst stateProps = state => ({\r\n  ...state.fun\r\n})\r\nconst getActions = () => ({\r\n  setCount1: setCount,\r\n  setCountAsync,\r\n  resetCount\r\n})\r\nexport default connect(stateProps, getActions())(ReduxFun)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, List, Avatar, Input } from 'antd';\r\nimport { PlusOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport store from '@/store';\r\nimport { deleteItemAction, resetInputAction, editItemAction, checkAllItemAction } from '@/store/actions';\r\nclass ReduxDemo extends Component {\r\n  state = {\r\n    listIndex: -1\r\n  }\r\n  // input输入:（只有input才能这么拿值）\r\n  inputChange = (e) => {\r\n    // 正常是提交一个对象到reducers里，但是通过封装的action的方法，返回新的对象，然后再提交，和原先的直接提交是一回事\r\n    store.dispatch(resetInputAction(e.target.value));\r\n  }\r\n  // 清空Input\r\n  reset = () => {\r\n    store.dispatch(resetInputAction(''));\r\n  }\r\n  // 添加至列表\r\n  add = () => {\r\n    store.dispatch({ type: 'user_set_listpush' });\r\n  }\r\n  // 删除列表：\r\n  deleteItem1 = (index) => {\r\n    // Redux简写\r\n    store.dispatch(deleteItemAction(index));\r\n    // Redux原始写法\r\n    // store.dispatch({\r\n    //   type: 'USER_DELETE_ITEM1',\r\n    //   index\r\n    // });\r\n  }\r\n  // 修改列表input状态\r\n  handleCheck = (id) => (e) => {\r\n    const obj = { id: id, done: e.target.checked };\r\n    store.dispatch(editItemAction(obj));\r\n  };\r\n  // 全选\r\n  // handleCheckAll = (e) => {\r\n  //   store.dispatch(checkAllItemAction(e.target.checked));\r\n  // }\r\n  // 清除全选\r\n  // handleCheckClear = () => {\r\n  //   store.dispatch(checkAllItemAction(false));\r\n  // }\r\n  handleMouse = (flag, index) => (e) => {\r\n    // console.log(flag, e.target);\r\n    this.setState({ listIndex: index });\r\n  }\r\n  render () {\r\n    const { statelList, inputVal } = this.props; // redures数据\r\n    const { resetInputAction, checkAllItemAction } = this.props; // actions方法\r\n    const { listIndex } = this.state;\r\n    console.log('Redux', this.props, store, store.getState());\r\n    return (\r\n      <div>\r\n        {inputVal} &nbsp;\r\n        <Input placeholder={inputVal} value={inputVal === '请输入' ? '' : inputVal} className='main-input' onChange={this.inputChange} style={{ width: '200px' }} /> &nbsp;\r\n        <Button type=\"primary\" icon={<PlusOutlined />} onClick={this.add}>添加至列表</Button> &nbsp;\r\n        {/* <Button type=\"primary\" icon={<CloseOutlined />} onClick={this.reset}>清空Input</Button> &nbsp; */}\r\n        <Button type=\"primary\" icon={<CloseOutlined />} onClick={() => resetInputAction('')}>清空Input</Button> &nbsp;\r\n        <Button type=\"primary\" icon={<CloseOutlined />} onClick={() => this.deleteItem1(0)}>删除第一个</Button> &nbsp;\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={statelList}\r\n          renderItem={(item, index) =>\r\n            // 不设置key,循环就会拿索引，然后就会造成key混乱，然后虚拟dom赋值给input\r\n            <List.Item key={item.id} style={{ backgroundColor: listIndex === index ? '#ddd' : '#fff' }} onMouseEnter={this.handleMouse(true, index)} onMouseLeave={this.handleMouse(false)}  >\r\n              <input type=\"checkbox\" checked={item.done} onChange={this.handleCheck(item.id)} />\r\n              <span>{item.done ? 'true' : 'false'}</span>\r\n              <List.Item.Meta\r\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                title={<span>{item.id} -- {item.name} </span>}\r\n                description=\"Ant Design\" />\r\n\r\n              <button style={{ display: listIndex === index ? 'block' : 'none' }} onClick={() => this.deleteItem1(index)}>删除</button>\r\n            </List.Item>\r\n\r\n          } />\r\n        <div>\r\n          {/* <input type=\"checkbox\" checked={statelList.filter(i => i.done).length === statelList.length ? true : false} onChange={this.handleCheckAll} />全选， */}\r\n          <input type=\"checkbox\" checked={statelList.filter(i => i.done).length === statelList.length ? true : false} onChange={e => checkAllItemAction(e.target.checked)} />全选，\r\n          已选择{statelList.filter(i => i.done).length}，全部{statelList.length}\r\n          {/* <button onClick={this.handleCheckClear}>清除全选</button> */}\r\n          <button onClick={() => checkAllItemAction(false)}>清除全选</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst getActions = () => ({\r\n  resetInputAction,\r\n  checkAllItemAction\r\n})\r\nexport default connect(state => state.user, getActions())(ReduxDemo);","export default __webpack_public_path__ + \"static/media/redux.dc141c46.png\";","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport ReduxClass from './components/ReduxClass'\r\nimport ReduxFun from './components/ReduxFun'\r\nimport ReduxDemo from './components/ReduxDemo'\r\n\r\nimport reduxImg from '@/assets/images/redux.png'\r\n\r\nfunction ReduxWriting (props) {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Redux</h1>\r\n      <ul style={{ textAlign: 'center' }}>\r\n        <li >总结：{props.count}</li>\r\n      </ul>\r\n      <div className='flex'>\r\n        <ReduxClass />\r\n        <ReduxFun />\r\n      </div>&nbsp;\r\n      <img style={{ margin: '30px 0', border: '1px solid #000' }} src={reduxImg} alt=\"\" />\r\n\r\n      <ReduxDemo />\r\n    </div>\r\n  )\r\n}\r\nexport default connect(state => state.fun)(ReduxWriting)\r\n"],"sourceRoot":""}