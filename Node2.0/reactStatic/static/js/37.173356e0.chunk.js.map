{"version":3,"sources":["views/page/Demo/PropsWriting/components/PropsClass/index.jsx","views/page/Demo/PropsWriting/components/PropsFun/index.jsx","views/page/Demo/PropsWriting/index.jsx"],"names":["PropsClass","params","params1","console","log","alert","this","props","val","val2","val3","number","str","bool","undefineds","nulls","obj","arr","fun","id","title","name","onClick","Component","defaultProps","undefined","PropsFun","ref","useImperativeHandle","clickFun","clickFun2","style","color","fontSize","optionalNode","forwardRef","PropsWriting","useState","PropsClassRef","useRef","FunRef","current","clickClass","className"],"mappings":"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","file":"static/js/37.173356e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass PropsClass extends Component {\r\n  // props校验类型\r\n  static propTypes = {\r\n    val: PropTypes.string.isRequired, //必传\r\n    val2: PropTypes.number,\r\n    val3: PropTypes.string,\r\n    //\r\n    number: PropTypes.number, //数字\r\n    str: PropTypes.string, // 字符串\r\n    bool: PropTypes.bool, // 布尔值\r\n    // undefineds: PropTypes.undefined, //不支持\r\n    // nulls: PropTypes.null,   //不支持\r\n    obj: PropTypes.object, // 对象\r\n    arr: PropTypes.array, //数组\r\n    fun: PropTypes.func //函数\r\n    // optionalNode: PropTypes.node //支持（数字、字符串、元素、数组、Fragment）\r\n  }\r\n  // props设置默认值  (不必传，未传，才会设置默认值)\r\n  static defaultProps = {\r\n    val2: 22,\r\n    val3: '默认值',\r\n\r\n    number: 1,\r\n    str: '看看电视',\r\n    bool: false,\r\n    undefineds: undefined,\r\n    nulls: null,\r\n    obj: { id: '02', title: '大口' },\r\n    arr: [\r\n      { id: '77', name: '开裤' },\r\n      { id: '88', name: '打架' }\r\n    ],\r\n    // optionalNode: [{ id: '88' }],\r\n    fun: params => {\r\n      alert(`未传父组件方法，自身默认的方法：${params}`)\r\n    }\r\n  }\r\n\r\n  //\r\n  clickClass(params, params1) {\r\n    console.log(params, params1)\r\n    alert(`父组件 调用 class子组件方法 ${params}-${params1}`)\r\n  }\r\n\r\n  render() {\r\n    const { val, val2, val3 } = this.props\r\n    const { number, str, bool, undefineds, nulls, obj, arr, fun } = this.props\r\n    return (\r\n      <div>\r\n        <h1>Props接参(类式组件)</h1>\r\n        <ul>\r\n          <li>\r\n            <h3>{val === '值' ? '子组件接收的数据（传）' : '子组件接收的数据（未传）'}</h3>\r\n          </li>\r\n          <li>数据1：{val}</li>\r\n          <li>数据2：{val2}</li>\r\n          <li>数据3：{val3}</li>\r\n          {/* <li>任何类型：{optionalNode[0].id}</li> */}\r\n          <hr />\r\n\r\n          <li>数&nbsp;&nbsp;&nbsp;字：{number}</li>\r\n          <li>字符串：{str}</li>\r\n          <li>布尔值：{bool ? 'true' : 'false'}</li>\r\n          <li>未定义：{!undefineds ? 'undefined' : ''}</li>\r\n          <li>null空：{!nulls ? 'null' : ''}</li>\r\n          <li>对&nbsp;&nbsp;&nbsp;象：{`{id：${obj.id}、title：${obj.title}}`}</li>\r\n          <li>数&nbsp;&nbsp;&nbsp;组：{`[{id：${arr[0].id}、title：${arr[0].name}}, {id：${arr[1].id}、title：${arr[1].name}}]`}</li>\r\n          <li>\r\n            函&nbsp;&nbsp;&nbsp;数：<button onClick={() => fun('9999999')}>父组件方法</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PropsClass\r\n","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nfunction PropsFun(props, ref) {\r\n  const { val, val2, val3 } = props\r\n  const { number, str, bool, undefineds, nulls, obj, arr, fun } = props\r\n  //\r\n  //\r\n  useImperativeHandle(ref, () => ({\r\n    clickFun(params, params1) {\r\n      alert(`父组件 调用 fun子组件方法 ${params} - ${params1}`)\r\n    },\r\n    clickFun2\r\n  }))\r\n\r\n  const clickFun2 = (params, params1) => {\r\n    alert(`父组件 调用 fun子组件方法 ${params} - ${params1}`)\r\n  }\r\n\r\n  const currClick = () => {\r\n    alert('forwardRef渲染函数不支持propTypes或defaultProps,未传父组件方法，自身默认的方法')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Props接参(函数式组件)</h1>\r\n      <ul>\r\n        <li>\r\n          <h3>{val === '值' ? '子组件接收的数据（传）' : '子组件接收的数据（未传）'}</h3>\r\n        </li>\r\n        <li>\r\n          <h3 style={{ color: 'red', fontSize: '14px' }}>注：forwardRef渲染函数不支持propTypes或defaultProps</h3>\r\n        </li>\r\n        <li>数据1：{val}</li>\r\n        <li>数据2：{val2}</li>\r\n        <li>数据3：{val3}</li>\r\n        {/* <li>任何类型：{optionalNode[0].id}</li> */}\r\n        <hr />\r\n\r\n        <li>数&nbsp;&nbsp;&nbsp;字：{number}</li>\r\n        <li>字符串：{str}</li>\r\n        <li>布尔值：{bool ? 'true' : 'false'}</li>\r\n        <li>未定义：{!undefineds ? 'undefined' : ''}</li>\r\n        <li>null空：{!nulls ? 'null' : ''}</li>\r\n        <li>对&nbsp;&nbsp;&nbsp;象：{obj ? `{ id：${obj.id}、title：${obj.title}} ` : 'forwardRef渲染函数不支持propTypes或defaultProps'}</li>\r\n        <li>数&nbsp;&nbsp;&nbsp;组：{arr ? `[{ id：${arr[0].id}、title：${arr[0].name}}, { id：${arr[1].id}、title：${arr[1].name} }]` : 'forwardRef渲染函数不支持propTypes或defaultProps'}</li>\r\n        <li>\r\n          函&nbsp;&nbsp;&nbsp;数：<button onClick={() => (fun ? fun('88888888') : currClick())}>父组件方法</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// props校验类型\r\nPropsFun.propTypes = {\r\n  val: PropTypes.string.isRequired, //必传\r\n  val2: PropTypes.number,\r\n  val3: PropTypes.string,\r\n  //\r\n  number: PropTypes.number, //数字\r\n  str: PropTypes.string, // 字符串\r\n  bool: PropTypes.bool, // 布尔值\r\n  // undefineds: PropTypes.undefined, //不支持\r\n  // nulls: PropTypes.null,   //不支持\r\n  obj: PropTypes.object, // 对象\r\n  arr: PropTypes.array, //数组\r\n  fun: PropTypes.func, //函数\r\n  optionalNode: PropTypes.node //支持（数字、字符串、元素、数组、Fragment）\r\n}\r\n// props设置默认值  (不必传，未传，才会设置默认值)\r\nPropsFun.defaultProps = {\r\n  val2: 22,\r\n  val3: '默认值',\r\n\r\n  number: 1,\r\n  str: '看看电视',\r\n  bool: false,\r\n  undefineds: undefined,\r\n  nulls: null,\r\n  obj: { id: '02', title: '大口' },\r\n  arr: [\r\n    { id: '77', name: '开裤' },\r\n    { id: '88', name: '打架' }\r\n  ],\r\n  optionalNode: [{ id: '88' }],\r\n  fun: params => {\r\n    alert(`fun初始化函数：${params} `)\r\n  }\r\n}\r\n\r\n// forwardRef渲染函数不支持propTypes或defaultProps\r\nexport default forwardRef(PropsFun)\r\n","import React, { useState, useRef } from 'react'\r\nimport PropsClass from './components/PropsClass'\r\nimport PropsFun from './components/PropsFun'\r\n\r\n// import Cc from './cc'\r\n\r\nfunction PropsWriting() {\r\n  const [number] = useState(987)\r\n  const [str] = useState('生生世世')\r\n  const [bool] = useState(true)\r\n  const [undefineds] = useState(undefined)\r\n  const [nulls] = useState(null)\r\n  const [obj] = useState({\r\n    id: '01',\r\n    title: '熊'\r\n  })\r\n  const [arr] = useState([\r\n    { id: '11', name: '习俗' },\r\n    { id: '22', name: '车型' }\r\n  ])\r\n  const fun = params => {\r\n    alert(`父组件方法：${params}`)\r\n  }\r\n\r\n  // 调用calss子组件方法\r\n  const PropsClassRef = useRef()\r\n  const getClassClick = e => {\r\n    PropsClassRef.current.clickClass(1, 2) // 调用子组件方法\r\n    console.log(PropsClassRef.current)\r\n  }\r\n\r\n  // 调用函数子组件方法\r\n  const FunRef = useRef()\r\n  const getFunClick = e => {\r\n    FunRef.current.clickFun(111, 2222)\r\n    console.log(FunRef.current)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Props传参</h1>\r\n      <ul>\r\n        <li>\r\n          <h3>父组件数据</h3>\r\n        </li>\r\n        <li>数&nbsp;&nbsp;&nbsp;字：{number}</li>\r\n        <li>字符串：{str}</li>\r\n        <li>布尔值：{bool ? 'true' : 'false'}</li>\r\n        <li>未定义：{!undefineds ? 'undefined' : ''}</li>\r\n        <li>null空：{!nulls ? 'null' : ''}</li>\r\n        <li>对&nbsp;&nbsp;&nbsp;象：{`{id：${obj.id}、title：${obj.title}}`}</li>\r\n        <li>数&nbsp;&nbsp;&nbsp;组：{`[{id：${arr[0].id}、title：${arr[0].name}}, {id：${arr[1].id}、title：${arr[1].name}}]`}</li>\r\n        <li>\r\n          函&nbsp;&nbsp;&nbsp;数：<button onClick={() => fun(888)}>click</button>\r\n        </li>\r\n\r\n        <li>\r\n          调用class子组件方法：<button onClick={() => getClassClick()}>classClick</button>\r\n        </li>\r\n        <li>\r\n          调用fun子组件方法：<button onClick={() => getFunClick()}>funClick</button>\r\n        </li>\r\n      </ul>\r\n      <div className='flex'>\r\n        <PropsClass val='值' number={number} str={str} obj={obj} arr={arr} fun={fun} optionalNode={arr} />\r\n        <PropsClass ref={PropsClassRef} val='calss组件' />\r\n\r\n        <PropsFun val='值' number={number} str={str} obj={obj} arr={arr} fun={fun} optionalNode={arr} />\r\n        <PropsFun ref={FunRef} />\r\n      </div>\r\n\r\n      {/* <Cc ref={FunRef} /> */}\r\n    </div>\r\n  )\r\n}\r\nexport default PropsWriting\r\n"],"sourceRoot":""}