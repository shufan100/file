{"version":3,"sources":["views/page/BasisCom/Form/componetns/modelForm.jsx","views/page/BasisCom/Form/index.jsx"],"names":["ModelForm","visible","onCreate","onCancel","useForm","form","title","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","info","console","log","layout","name","initialValues","modifier","Item","label","rules","required","message","type","className","Group","value","RangePicker","Option","username","password","remember","moment","validateMessages","rangeConfig","normFile","e","Array","isArray","fileList","range","start","end","result","i","push","disabledDate","current","endOf","disabledRangeTime","_","disabledHours","disabledMinutes","disabledSeconds","FormCom","useState","formLayout","setFormLayout","componentSize","setComponentSize","requiredMark","setRequiredMarkType","nameValue","useWatch","formItemLayout","wrapperCol","span","offset","labelCol","buttonItemLayout","setVisible","onChange","target","Button","size","onFinish","rangeTimeValue","fieldsValue","format","success","onFinishFailed","errorInfo","error","autoComplete","colon","labelAlign","flex","labelWrap","hasFeedback","placeholder","allowClear","maxLength","showCount","help","Password","validateStatus","TextArea","tooltip","icon","InfoCircleOutlined","getFieldValue","setFieldsValue","noStyle","shouldUpdate","prevValues","currentValues","select","mode","warningOnly","min","style","marginBottom","display","width","margin","showTime","disabledTime","ranges","startOf","disabled","valuePropName","getValueFromEvent","extra","action","listType","UploadOutlined","htmlType","onClick","remark","url","year","month","day"],"mappings":"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","file":"static/js/31.444f00fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Modal, Form, Input, Radio } from 'antd'\r\n\r\nconst ModelForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm()\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title='弹窗'\r\n      okText='Create'\r\n      cancelText='Cancel'\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then(values => {\r\n            form.resetFields()\r\n            onCreate(values)\r\n          })\r\n          .catch(info => {\r\n            console.log('Validate Failed:', info)\r\n          })\r\n      }}\r\n    >\r\n      <Form form={form} layout='vertical' name='form_in_modal' initialValues={{ modifier: 'public' }}>\r\n        <Form.Item name='title' label='标题' rules={[{ required: true, message: '请输入标题!' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name='description' label='描述'>\r\n          <Input type='textarea' />\r\n        </Form.Item>\r\n        <Form.Item name='modifier' className='collection-create-form_last-form-item'>\r\n          <Radio.Group>\r\n            <Radio value='public'>Public</Radio>\r\n            <Radio value='private'>Private</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\nexport default ModelForm\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, Checkbox, Radio, Select, Typography, DatePicker, Message, Upload } from 'antd'\r\nimport { InfoCircleOutlined, UploadOutlined } from '@ant-design/icons'\r\nimport ModelForm from './componetns/modelForm'\r\nimport moment from 'moment'\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select\r\n// form表单初始值\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  remember: false,\r\n  'radio-group': '2',\r\n  'range-time-picker': [moment('2022-06-07', 'YYYY-MM-DD'), '']\r\n}\r\n// 自定义校验规则\r\nconst validateMessages = {\r\n  required: '${label} 是必选字段!!!' //有校验但没写msg就走这个提示\r\n}\r\nconst rangeConfig = {\r\n  rules: [\r\n    {\r\n      type: 'array',\r\n      required: true,\r\n      message: '请选择时间!'\r\n    }\r\n  ]\r\n}\r\nconst normFile = e => {\r\n  console.log('Upload event:', e)\r\n\r\n  if (Array.isArray(e)) {\r\n    return e\r\n  }\r\n\r\n  return e?.fileList\r\n}\r\n// -----日期限制------\r\nconst range = (start, end) => {\r\n  const result = []\r\n  for (let i = start; i < end; i++) {\r\n    result.push(i)\r\n  }\r\n  return result\r\n} // eslint-disable-next-line arrow-body-style\r\nconst disabledDate = current => {\r\n  // 今天之前和今天不能选择\r\n  return current && current < moment().endOf('day')\r\n}\r\n\r\nconst disabledRangeTime = (_, type) => {\r\n  if (type === 'start') {\r\n    //开始日期(限制)\r\n    return {\r\n      disabledHours: () => range(0, 8), //时：1-7小时不能选\r\n      disabledMinutes: () => range(40, 60), //分：40-59分不能选\r\n      disabledSeconds: () => [55, 56, 57, 58, 59, 0] //秒：55, 56, 57, 58, 59, 60秒不能选\r\n    }\r\n  }\r\n  // 结束日期(限制)\r\n  return {\r\n    disabledHours: () => range(1, 10),\r\n    disabledMinutes: () => range(0, 31),\r\n    disabledSeconds: () => [55, 56]\r\n  }\r\n}\r\n\r\nconst FormCom = () => {\r\n  const [form] = Form.useForm() //1函数组件用useForm 2类组件用ref：formRef = React.createRef();\r\n  const [formLayout, setFormLayout] = useState('horizontal')\r\n  const [componentSize, setComponentSize] = useState('default')\r\n  const [requiredMark, setRequiredMarkType] = useState('Required')\r\n  const nameValue = Form.useWatch('username', form) //监听username变化\r\n\r\n  // 函数组件写法\r\n  const onGenderChange = value => {\r\n    console.log(value)\r\n    console.log(form.getFieldValue(), form.getFieldValue('select'), '-----')\r\n    switch (value) {\r\n      case 'male':\r\n        form.setFieldsValue({\r\n          username: 'Hi, man!'\r\n        })\r\n        return\r\n\r\n      case 'female':\r\n        form.setFieldsValue({\r\n          username: 'Hi, lady!'\r\n        })\r\n        return\r\n\r\n      case 'other':\r\n        form.setFieldsValue({\r\n          username: 'Hi there!'\r\n        })\r\n        break\r\n      default:\r\n    }\r\n  }\r\n  // 类式组件写法\r\n  // formRef = React.createRef()\r\n  // onGenderChange = value => {\r\n  //   switch (value) {\r\n  //     case 'male':\r\n  //       this.formRef.current.setFieldsValue({\r\n  //         username: 'Hi, man!'\r\n  //       })\r\n  //       return\r\n\r\n  //     case 'female':\r\n  //       this.formRef.current.setFieldsValue({\r\n  //         username: 'Hi, lady!'\r\n  //       })\r\n  //       return\r\n\r\n  //     case 'other':\r\n  //       this.formRef.current.setFieldsValue({\r\n  //         username: 'Hi there!'\r\n  //       })\r\n  //   }\r\n  // }\r\n  // -------------------\r\n  // 提交表单且数据验证成功后回调事件\r\n\r\n  const onFinish = values => {\r\n    console.log('提交成功:', values)\r\n    const rangeTimeValue = values['range-time-picker']\r\n    const fieldsValue = {\r\n      ...values,\r\n      // 时间类组件的 value 类型为 moment 对象，所以在提交服务器前需要预处理\r\n      'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')]\r\n    }\r\n    console.log(fieldsValue)\r\n    Message.success('提交成功')\r\n  }\r\n\r\n  // 提交表单且数据验证失败后回调事件\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('提交失败:', errorInfo)\r\n    Message.error('提交失败')\r\n  }\r\n  // 重置\r\n  const onReset = () => {\r\n    form.resetFields()\r\n  }\r\n  // 填充\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      username: 'edit',\r\n      password: 'q123456',\r\n      remark: '备注11',\r\n      select: 'other',\r\n      'select-multiple': ['red', 'Blue'],\r\n      remember: true,\r\n      url: 'https://taobao.com/',\r\n      year: '1995',\r\n      month: '11',\r\n      day: '08',\r\n      'range-time-picker': [moment().startOf('month'), moment().endOf('month')]\r\n    })\r\n  }\r\n\r\n  // -----------\r\n  const formItemLayout =\r\n    formLayout !== 'inline'\r\n      ? {\r\n          wrapperCol: { span: 10, offset: 0 },\r\n          labelCol: { span: 1 }\r\n        }\r\n      : null\r\n  const buttonItemLayout =\r\n    formLayout !== 'inline'\r\n      ? {\r\n          wrapperCol: { span: 10, offset: 2 }\r\n        }\r\n      : null\r\n  const RadioChange = ({ target: { value } }) => {\r\n    setFormLayout(value)\r\n  }\r\n  const onFormLayoutChange = ({ target: { value } }) => {\r\n    setComponentSize(value)\r\n  }\r\n  const onRequiredTypeChange = ({ target: { value } }) => {\r\n    setRequiredMarkType(value)\r\n  }\r\n  // -------弹窗事件\r\n  const [visible, setVisible] = useState(false)\r\n  const onCreate = values => {\r\n    console.log('弹窗回调: ', values)\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='h2Style'>form组件示例</h2>\r\n      <div className='main'>\r\n        <span>表单布局--{formLayout} </span>\r\n        <Radio.Group value={formLayout} onChange={RadioChange}>\r\n          <Radio.Button value='horizontal'>Horizontal</Radio.Button>\r\n          <Radio.Button value='vertical'>Vertical</Radio.Button>\r\n          <Radio.Button value='inline'>Inline</Radio.Button>\r\n        </Radio.Group>\r\n        <br />\r\n        <br />\r\n        <span>表单尺寸--{componentSize} </span>\r\n        <Radio.Group value={componentSize} onChange={onFormLayoutChange}>\r\n          <Radio.Button value='large'>大</Radio.Button>\r\n          <Radio.Button value='default'>默认</Radio.Button>\r\n          <Radio.Button value='small'>小</Radio.Button>\r\n        </Radio.Group>\r\n        <br />\r\n        <br />\r\n        <span>表单必选和可选样式--{requiredMark} </span>\r\n        <Radio.Group value={requiredMark} onChange={onRequiredTypeChange}>\r\n          <Radio.Button value='optional'>Optional</Radio.Button>\r\n          <Radio.Button value='Required'>Required</Radio.Button>\r\n          <Radio.Button value={false}>Hidden</Radio.Button>\r\n        </Radio.Group>\r\n        <br />\r\n        <br />\r\n        <Typography>\r\n          <pre>监听form表单Username的最新值: {nameValue}</pre>\r\n        </Typography>\r\n        <Form\r\n          name='basic' //会作为表单字段 id 前缀使用\r\n          form={form} // Form.useForm()\r\n          initialValues={initialValues} //表单初始值\r\n          {...formItemLayout} //布局（label和input的宽度）\r\n          layout={formLayout} //表单布局 （horizontal、vertical、inline）\r\n          size={componentSize} //表单尺寸（large、default、small）\r\n          requiredMark={requiredMark} //通过 requiredMark 切换必选与可选样式（optional(文字)、Required(星星)、false(无)）\r\n          validateMessages={validateMessages}\r\n          onFinish={onFinish} //表单提交成功触发\r\n          onFinishFailed={onFinishFailed} //表单提交失败触发\r\n          autoComplete='off'\r\n          colon //是否显示label后面的冒号（默认true）\r\n          labelAlign='right' //label 文本对齐方式（left、right）默认''\r\n          labelCol={{ flex: formLayout === 'vertical' ? '30px' : '100px' }} //label 标签布局\r\n          labelWrap //label (文本)换行方式（left、right）默认right\r\n        >\r\n          {/* 自定义校验:\r\n            validateStatus: 校验状态，可选 'success', 'warning', 'error', 'validating'。\r\n            hasFeedback：用于给输入框添加反馈图标 \r\n            help：提示信息，如不设置，则会根据校验规则自动生成 \r\n        */}\r\n          <Form.Item label='Username' name='username' rules={[{ required: true, message: '请输入用户名!' }]} hasFeedback>\r\n            <Input placeholder='请输入用户名' allowClear maxLength={10} showCount />\r\n          </Form.Item>\r\n          <Form.Item label='Password' name='password' rules={[{ required: true, message: '请输入密码!' }]} help='Should be combination of numbers '>\r\n            <Input.Password placeholder='请输入密码' />\r\n          </Form.Item>\r\n          <Form.Item label='备注备注备注备注' name='remark' rules={[{ required: true, message: '请输入备注!' }]} hasFeedback validateStatus='warning'>\r\n            <Input.TextArea placeholder='请输入备注' showCount maxLength={100} />\r\n          </Form.Item>\r\n          <Form.Item name='radio-group' label='Radio.Group'>\r\n            <Radio.Group>\r\n              <Radio value='1'>item 1</Radio>\r\n              <Radio value='2'>item 2</Radio>\r\n              <Radio value='3'>item 3</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item label='Select' name='select' tooltip={{ title: '不必填字段', icon: <InfoCircleOutlined /> }}>\r\n            <Select placeholder='请选择' onChange={onGenderChange} allowClear>\r\n              <Select.Option value='male'>male</Select.Option>\r\n              <Select.Option value='female'>female</Select.Option>\r\n              <Select.Option value='other'>other</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          {/* 根据 select的值显示隐藏*/}\r\n          <Form.Item noStyle shouldUpdate={(prevValues, currentValues) => prevValues.select !== currentValues.select}>\r\n            {({ getFieldValue }) =>\r\n              getFieldValue('select') === 'other' ? (\r\n                <Form.Item name='customize' label='customize' rules={[{ required: true }]}>\r\n                  <Input />\r\n                </Form.Item>\r\n              ) : null\r\n            }\r\n          </Form.Item>\r\n          <Form.Item name='select-multiple' label='Select多选'>\r\n            <Select mode='multiple' placeholder='请选择'>\r\n              <Option value='red'>Red</Option>\r\n              <Option value='green'>Green</Option>\r\n              <Option value='blue'>Blue</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='url'\r\n            label='URL'\r\n            rules={[\r\n              { required: true },\r\n              { type: 'url', warningOnly: true, message: 'URL不是一个有效的url' },\r\n              { type: 'string', min: 6, message: 'URL最少6个字符' }\r\n            ]}\r\n          >\r\n            <Input placeholder='请输入URL' />\r\n          </Form.Item>\r\n          <Form.Item label='生日' style={{ marginBottom: 0 }} required>\r\n            <Form.Item name='year' rules={[{ required: true }]} style={{ display: 'inline-block', width: 'calc(33% - 6px)' }}>\r\n              <Input placeholder='年' />\r\n            </Form.Item>\r\n            <Form.Item name='month' rules={[{ required: true }]} style={{ display: 'inline-block', width: 'calc(33% - 6px)', margin: '0 8px' }}>\r\n              <Input placeholder='月' />\r\n            </Form.Item>\r\n            <Form.Item name='day' rules={[{ required: true }]} style={{ display: 'inline-block', width: 'calc(33% - 0px)' }}>\r\n              <Input placeholder='日' />\r\n            </Form.Item>\r\n          </Form.Item>\r\n          <Form.Item name='range-time-picker' label='日期(时间)' {...rangeConfig}>\r\n            <RangePicker\r\n              showTime //增加时间选择功能\r\n              format='YYYY-MM-DD HH:mm:ss' //日期格式\r\n              disabledDate={disabledDate} //禁用日期\r\n              disabledTime={disabledRangeTime} //禁用时分秒\r\n              ranges={{\r\n                '今-天': [moment(), moment()], //快捷键\r\n                '当-月': [moment().startOf('month'), moment().endOf('month')],\r\n                '本-年': [moment().startOf('year'), moment().endOf('year')]\r\n              }}\r\n              disabled={[true, false]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name='upload' label='Upload' valuePropName='fileList' getValueFromEvent={normFile} extra='longgggggggggggggggggggggggggggggggggg'>\r\n            <Upload name='logo' action='/upload.do' listType='picture'>\r\n              <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Form.Item name='remember' valuePropName='checked'>\r\n              <Checkbox>记住密码</Checkbox>\r\n            </Form.Item>\r\n            <Button type='primary' htmlType='submit'>\r\n              提交\r\n            </Button>\r\n            <Button htmlType='button' onClick={onReset}>\r\n              重置\r\n            </Button>\r\n            <Button htmlType='button' onClick={onFill}>\r\n              填充表单\r\n            </Button>\r\n            <Button\r\n              type='primary'\r\n              onClick={() => {\r\n                setVisible(true)\r\n              }}\r\n            >\r\n              表单弹窗\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n\r\n      {/* 弹窗00000000000 */}\r\n      <ModelForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default FormCom\r\n"],"sourceRoot":""}