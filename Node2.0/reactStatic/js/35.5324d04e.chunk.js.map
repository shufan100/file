{"version":3,"sources":["views/page/BasisCom/Message/index.jsx"],"names":["Messages","useState","isModalVisible","setIsModalVisible","openMessage","type","openNotification","message","description","openModel","title","content","className","defaultActiveKey","ghost","expandIconPosition","Panel","header","onClick","visible","onOk","onCancel"],"mappings":"qTAGe,SAASA,IACtB,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAAc,SAAAC,GAClB,IAAQA,GAAR,oBAA2BA,EAA3B,YACD,EACKC,EAAmB,SAAAD,GACvB,IAAaA,GAAM,CACjBE,QAAS,qBACTC,YAAa,8HAEhB,EACKC,EAAY,SAAAJ,GAChB,IAAMA,GAAM,CACVK,MAAO,4BACPC,QAAS,oCAEZ,EACD,OACE,gCACE,oBAAIC,UAAU,UAAd,6CAEA,mBAAUC,iBAAkB,CAAC,KAAMC,OAAK,EAACC,mBAAmB,MAA5D,SACE,kBAAUC,MAAV,CAAgBC,OAAO,sBAAvB,SACE,8BACE,mBAAQC,QAAS,kBAAMd,EAAY,UAAlB,EAAjB,qBACA,mBAAQc,QAAS,kBAAMd,EAAY,OAAlB,EAAjB,kBACA,mBAAQc,QAAS,kBAAMd,EAAY,UAAlB,EAAjB,qBACA,mBAAQc,QAAS,kBAAMd,EAAY,QAAlB,EAAjB,uBALmC,OAUzC,mBAAUS,iBAAkB,CAAC,KAAMC,OAAK,EAACC,mBAAmB,MAA5D,SACE,kBAAUC,MAAV,CAAgBC,OAAO,2BAAvB,SACE,8BACE,mBAAQC,QAAS,kBAAMZ,EAAiB,UAAvB,EAAjB,qBACA,mBAAQY,QAAS,kBAAMZ,EAAiB,OAAvB,EAAjB,kBACA,mBAAQY,QAAS,kBAAMZ,EAAiB,UAAvB,EAAjB,qBACA,mBAAQY,QAAS,kBAAMZ,EAAiB,QAAvB,EAAjB,uBALwC,OAU9C,mBAAUO,iBAAkB,CAAC,KAAMC,OAAK,EAACC,mBAAmB,MAA5D,SACE,kBAAUC,MAAV,CAAgBC,OAAO,oBAAvB,SACE,8BACE,mBAAQC,QAAS,kBAAMT,EAAU,UAAhB,EAAjB,qBACA,mBAAQS,QAAS,kBAAMT,EAAU,OAAhB,EAAjB,kBACA,mBAAQS,QAAS,kBAAMT,EAAU,UAAhB,EAAjB,qBACA,mBAAQS,QAAS,kBAAMT,EAAU,QAAhB,EAAjB,uBALiC,OAUvC,mBAAUI,iBAAkB,CAAC,KAAMC,OAAK,EAACC,mBAAmB,MAA5D,SACE,kBAAUC,MAAV,CAAgBC,OAAO,qBAAvB,SACE,mBAAQZ,KAAK,UAAUa,QAAS,kBAAMf,GAAkB,EAAxB,EAAhC,yBAD+B,OAOnC,oBAAOO,MAAM,oBAAUS,QAASjB,EAAgBkB,KAAM,kBAAMjB,GAAkB,EAAxB,EAAgCkB,SAAU,kBAAMlB,GAAkB,EAAxB,EAAhG,UACE,iDACA,iDACA,sDAIP,C","file":"static/js/35.5324d04e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Collapse, Button, Space, message, notification, Modal } from 'antd'\r\n\r\nexport default function Messages() {\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const openMessage = type => {\r\n    message[type](`This is a ${type} message`)\r\n  }\r\n  const openNotification = type => {\r\n    notification[type]({\r\n      message: 'Notification Title',\r\n      description: 'This is the content of the notification. This is the content of the notification. This is the content of the notification.'\r\n    })\r\n  }\r\n  const openModel = type => {\r\n    Modal[type]({\r\n      title: 'This is a warning message',\r\n      content: 'some messages...some messages...'\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className='h2Style'>Message组件示例</h2>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='message提示' key='1'>\r\n          <Space>\r\n            <Button onClick={() => openMessage('success')}>Success</Button>\r\n            <Button onClick={() => openMessage('info')}>Info</Button>\r\n            <Button onClick={() => openMessage('warning')}>Warning</Button>\r\n            <Button onClick={() => openMessage('error')}>Error</Button>\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='notification提示' key='1'>\r\n          <Space>\r\n            <Button onClick={() => openNotification('success')}>Success</Button>\r\n            <Button onClick={() => openNotification('info')}>Info</Button>\r\n            <Button onClick={() => openNotification('warning')}>Warning</Button>\r\n            <Button onClick={() => openNotification('error')}>Error</Button>\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='Modal提示' key='1'>\r\n          <Space>\r\n            <Button onClick={() => openModel('success')}>Success</Button>\r\n            <Button onClick={() => openModel('info')}>Info</Button>\r\n            <Button onClick={() => openModel('warning')}>Warning</Button>\r\n            <Button onClick={() => openModel('error')}>Error</Button>\r\n          </Space>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Collapse defaultActiveKey={['1']} ghost expandIconPosition='end'>\r\n        <Collapse.Panel header='对话框' key='1'>\r\n          <Button type='primary' onClick={() => setIsModalVisible(true)}>\r\n            Open Modal\r\n          </Button>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n\r\n      <Modal title='Modal弹窗' visible={isModalVisible} onOk={() => setIsModalVisible(false)} onCancel={() => setIsModalVisible(false)}>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}