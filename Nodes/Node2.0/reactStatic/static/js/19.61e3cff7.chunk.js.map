{"version":3,"sources":["../node_modules/_antd@4.21.7@antd/es/row/style/index.js","../node_modules/_antd@4.21.7@antd/es/col/style/index.js","../node_modules/_antd@4.21.7@antd/es/row/index.js","../node_modules/_antd@4.21.7@antd/es/col/index.js","assets/images/oldLife.png","assets/images/newLife.png","views/page/Demo/LifeCycle/LifeCycleClass/index.jsx"],"names":["Row","Col","Shopping","state","count1","opacity","colors","date","force","forceUpdate","add","setState","init","e","timer","setInterval","initDate","timer1","dates","Date","y","getFullYear","m","getMonth","d","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","str","clear","clearInterval","unMount","ReactDOM","unmountComponentAtNode","document","getElementById","console","log","this","nextProps","nextState","prevProps","prevState","prePorps","preStae","shapshotValue","className","onClick","style","color","span","src","oldLife","alt","offset","newLife","props","Component"],"mappings":"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","file":"static/js/19.61e3cff7.chunk.js","sourcesContent":["import '../../style/default.less'; // style dependencies\n// deps-lint-skip: grid\n\nimport '../../grid/style';","import '../../style/default.less'; // style dependencies\n// deps-lint-skip: grid\n\nimport '../../grid/style';","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","export default __webpack_public_path__ + \"static/media/oldLife.5a2da974.png\";","export default __webpack_public_path__ + \"static/media/newLife.ec894f1c.png\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Row, Col } from 'antd';\r\nimport './index.less';\r\nimport oldLife from '@/assets/images/oldLife.png'\r\nimport newLife from '@/assets/images/newLife.png'\r\n\r\nclass Shopping extends Component {\r\n  /**  18版本后将要废弃的生命周期钩子\r\n    子组件 props更新触发的生命周期的钩子（第一次传不会触发\r\n    componentWillReceiveProps (props) {\r\n      console.log('Content-componentWillReceiveProps', props);\r\n    }\r\n    组件将要挂载的钩子\r\n    componentWillMount () {\r\n      console.log('Content-componentWillMount');\r\n    }\r\n    组件将要更新生命周期钩子\r\n    componentWillUpdate () {\r\n      console.log('Content-componentWillUpdate');\r\n    }\r\n */\r\n\r\n  state = {\r\n    count1: 1,\r\n    opacity: 1,\r\n    colors: 'red',\r\n    date: ''\r\n  };\r\n\r\n  // --两个新增的生命周期钩子返回null就是什么事都不做--\r\n\r\n  // (新增1) 初始化和更新都会走：若state的值在任何时候都取决于props,那么可以使用这个生命周期钩子\r\n  static getDerivedStateFromProps (props, state) {\r\n    console.log('getDerivedStateFromProps--组件state的值任何时候都取决于props');\r\n    // 作用：适用于罕见的用例，state的值任何时候都取决于props,\r\n    // 需要返回值：1.state状态(对象)，2：null\r\n    return null;\r\n    // return { count1: 99 }; //返回状态对象就改不了\r\n  }\r\n\r\n  /**  1组件挂载完成(和Vue的mounted) */\r\n  componentDidMount () {\r\n    console.log('componentDidMount--组件挂载完成');\r\n    this.init()\r\n    this.initDate()\r\n  }\r\n\r\n  // （阀门）控制组件更新的阀门; state状态改变触发的生命周期钩子\r\n  shouldComponentUpdate (nextProps, nextState) {\r\n    // (开发不用写，使用PureComponent代替，会自动给我们匹配)\r\n    console.log('shouldComponentUpdate--阀门');\r\n    return true;\r\n  }\r\n\r\n  // (新增2) 更新会走:需要返回值：1.null,2.任何值\r\n  getSnapshotBeforeUpdate (prevProps, prevState) {\r\n    // 在最近一次渲染输出（提交到DOM节点）之前调用,它使的组件能在发生更改之前从DOM中捕获到一些信息，此生命周期的任何返回值将作为参数传递给componentDidUpdate\r\n    //结合定时器加载新闻的例子\r\n    console.log('getSnapshotBeforeUpdate-新增生命周期');\r\n    return null;\r\n  }\r\n  /**  2组件更新完成*/\r\n  componentDidUpdate (prePorps, preStae, shapshotValue) {\r\n    // shapshotValue：快照值\r\n    console.log('componentDidUpdate--组件更新完成');\r\n  }\r\n\r\n  /**  3组件将要卸载*/\r\n  componentWillUnmount () {\r\n    console.log('componentWillUnmount--组件将要卸载');\r\n    this.clear()\r\n  }\r\n  // --------------------------------------------------------------------------\r\n  // 强制刷新  \r\n  force = () => {\r\n    this.forceUpdate();\r\n  };\r\n  // 数据新增\r\n  add = () => {\r\n    this.setState({ count1: this.state.count1 + 1 })\r\n  };\r\n  init = (e) => {\r\n    this.timer = setInterval(() => {\r\n      let { opacity, colors } = this.state;\r\n      opacity -= 0.1;\r\n      if (opacity < 0.8) colors = '#000'\r\n      if (opacity < 0.1) {\r\n        opacity = 1;\r\n        colors = 'red'\r\n      }\r\n      this.setState({ opacity, colors }) //简写\r\n    }, 200)\r\n  };\r\n  initDate = () => {\r\n    this.timer1 = setInterval(() => {\r\n      let dates = new Date()\r\n      const y = dates.getFullYear()\r\n      const m = dates.getMonth() + 1\r\n      const d = dates.getDate()\r\n      const hh = dates.getHours()\r\n      const mm = dates.getMinutes()\r\n      const ss = dates.getSeconds()\r\n      let str = `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n      this.setState({ date: str })//常规\r\n    }, 1000)\r\n  }\r\n  // 清除计时器\r\n  clear = (e) => {\r\n    clearInterval(this.timer)\r\n    clearInterval(this.timer1)\r\n  };\r\n  //卸载组件\r\n  unMount = () => {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\r\n  }\r\n\r\n  render () {\r\n    console.log('render')\r\n    const { opacity, colors, date } = this.state;\r\n    return (\r\n      <div className=\"LifeCycleClass\">\r\n        <h1>生命周期(类)</h1>\r\n        <span>总数：{this.state.count1}</span> &nbsp;\r\n        <button onClick={this.add}>+1(state更新)</button> &nbsp;\r\n        <button onClick={() => this.forceUpdate()}>不改状态，强制更新(强制刷新)</button> &nbsp;\r\n        <button onClick={() => this.unMount()}>卸载组件</button><br /> &nbsp;\r\n\r\n        <div>\r\n          <h3>Demo</h3>\r\n          <span style={{ opacity: opacity, color: colors }}>DEMODEMODEMODEMODEMODEMODEMO</span>\r\n          <span>时间：{date}</span>\r\n          <button onClick={() => this.clear()}>清除计时器</button>\r\n        </div> &nbsp;\r\n\r\n        <Row>\r\n          <Col span={11}>\r\n            <h2>生命周期(旧)</h2>\r\n            <img src={oldLife} alt=\"\" />\r\n            <div>\r\n              <h3>初始化：</h3>\r\n              constructor<br />\r\n              1、componentWillMount--组件将要挂载<br />\r\n              render<br />\r\n              2、componentDidMount--组件挂载完毕<br />\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>更新：</h3>\r\n              1、componentWillReceiveProps<br />\r\n              2、shouldComponentUpdate--(阀门)<br />\r\n              3、componentWillUpdate--组件将要更新<br />\r\n              render<br />\r\n              4、componentDidUpdate--组件更新（完毕）<br />\r\n              注：强刷不走阀门\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>卸载：</h3>\r\n              componentWillUnmount--卸载组件前\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>18版本废弃钩子：</h3>\r\n              componentWillReceiveProps<br />\r\n              componentWillMount--将要挂载<br />\r\n              componentWillUpdate--将要更新<br />\r\n            </div><br />\r\n          </Col>\r\n          <Col span={11} offset={2}>\r\n            <h2>生命周期(新)</h2>\r\n            <img src={newLife} alt=\"\" />\r\n            <div>\r\n              <h3>初始化：</h3>\r\n              constructor<br />\r\n              {/* 适用于罕见的用例，返回对象或null */}\r\n              1、static getDerivedStateFromProps--组件state的值任何时候都取决于props<br />\r\n              render<br />\r\n              2、componentDidMount--组件挂载完毕<br />\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>更新：</h3>\r\n              1、static getDerivedStateFromProps--组件state的值任何时候都取决于props<br />\r\n              2、shouldComponentUpdate--(阀门)<br />\r\n              render<br />\r\n              {/* 组件在更新DOM之前触发，捕获到一些信息，返回值将作为参数传递给componentDidUpdate */}\r\n              3、getSnapshotBeforeUpdate--组件在更新DOM之前触发...<br />\r\n              4、componentDidUpdate--组件更新（完毕）<br />\r\n              注：强刷不走阀门\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>卸载：</h3>\r\n              componentWillUnmount--卸载组件前\r\n            </div><br />\r\n\r\n            <div>\r\n              <h3>18版本新增钩子：</h3>\r\n              static getDerivedStateFromProps--数据全部取决props<br />\r\n              getSnapshotBeforeUpdate--数据更新，DOM更新之前<br />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shopping;\r\n"],"sourceRoot":""}