{"version":3,"sources":["utils/Export2Excel.js"],"names":["sheet_from_array_of_arrays","data","opts","v","ws","range","s","c","r","e","R","length","C","cell","cell_ref","XLSX","encode_cell","t","Date","z","_table","datenum","parse","UTC","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","export_table_to_excel","id","oo","table","out","rows","querySelectorAll","ranges","outRow","columns","colspan","getAttribute","rowspan","cellValue","innerText","forEach","push","k","generateArray","document","getElementById","ws_name","wb","wbout","bookType","bookSST","type","saveAs","Blob","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","unshift","item","decode_range","colWidth","map","row","val","wch","toString","result","j","require"],"mappings":"wQA2DA,SAASA,EAA2BC,EAAMC,GAYxC,IAXA,IAPeC,EAOXC,EAAK,CAAC,EACNC,EAAQ,CACVC,EAAG,CACDC,EAAG,IACHC,EAAG,KAELC,EAAG,CACDF,EAAG,EACHC,EAAG,IAGEE,EAAI,EAAGA,GAAKT,EAAKU,SAAUD,EAClC,IAAK,IAAIE,EAAI,EAAGA,GAAKX,EAAKS,GAAGC,SAAUC,EAAG,CACpCP,EAAMC,EAAEE,EAAIE,IAAGL,EAAMC,EAAEE,EAAIE,GAC3BL,EAAMC,EAAEC,EAAIK,IAAGP,EAAMC,EAAEC,EAAIK,GAC3BP,EAAMI,EAAED,EAAIE,IAAGL,EAAMI,EAAED,EAAIE,GAC3BL,EAAMI,EAAEF,EAAIK,IAAGP,EAAMI,EAAEF,EAAIK,GAC/B,IAAIC,EAAO,CACTV,EAAGF,EAAKS,GAAGE,IAEb,GAAc,MAAVC,EAAKV,EAAT,CACA,IAAIW,EAAWC,IAAWC,YAAY,CACpCT,EAAGK,EACHJ,EAAGE,IAGiB,kBAAXG,EAAKV,EAAgBU,EAAKI,EAAI,IACd,mBAAXJ,EAAKV,EAAiBU,EAAKI,EAAI,IACtCJ,EAAKV,aAAae,MACzBL,EAAKI,EAAI,IACTJ,EAAKM,EAAIJ,IAASK,OAAO,IACzBP,EAAKV,GAtCIA,EAsCQU,EAAKV,OAAbkB,IArCDlB,GAAK,OACPe,KAAKI,MAAMnB,GACP,IAAIe,KAAKA,KAAKK,IAAI,KAAM,GAAI,MAArC,QAoCIV,EAAKI,EAAI,IAEhBb,EAAGU,GAAYD,CAda,CAe7B,CAGH,OADIR,EAAMC,EAAEC,EAAI,MAAUH,EAAG,QAAUW,IAAWS,aAAanB,IACxDD,CACR,CAED,SAASqB,IACP,KAAMC,gBAAgBD,GAAW,OAAO,IAAIA,EAC5CC,KAAKC,WAAa,GAClBD,KAAKE,OAAS,CAAC,CAChB,CAED,SAASC,EAAKvB,GAGZ,IAFA,IAAIwB,EAAM,IAAIC,YAAYzB,EAAEK,QACxBqB,EAAO,IAAIC,WAAWH,GACjBI,EAAI,EAAGA,GAAK5B,EAAEK,SAAUuB,EAAGF,EAAKE,GAAuB,IAAlB5B,EAAE6B,WAAWD,GAC3D,OAAOJ,CACR,CAEM,SAASM,EAAsBC,GACpC,IACIC,EAhHN,SAAuBC,GAIrB,IAHA,IAAIC,EAAM,GACNC,EAAOF,EAAMG,iBAAiB,MAC9BC,EAAS,GACJjC,EAAI,EAAGA,EAAI+B,EAAK9B,SAAUD,EAAG,CAIpC,IAHA,IAAIkC,EAAS,GAETC,EADMJ,EAAK/B,GACGgC,iBAAiB,MAC1B9B,EAAI,EAAGA,EAAIiC,EAAQlC,SAAUC,EAAG,CACvC,IAAIC,EAAOgC,EAAQjC,GACfkC,EAAUjC,EAAKkC,aAAa,WAC5BC,EAAUnC,EAAKkC,aAAa,WAC5BE,EAAYpC,EAAKqC,UA8BrB,GA7BkB,KAAdD,GAAoBA,IAAcA,IAAWA,GAAaA,GAG9DN,EAAOQ,SAAQ,SAAU9C,GACvB,GAAIK,GAAKL,EAAMC,EAAEE,GAAKE,GAAKL,EAAMI,EAAED,GAAKoC,EAAOjC,QAAUN,EAAMC,EAAEC,GAAKqC,EAAOjC,QAAUN,EAAMI,EAAEF,EAC7F,IAAK,IAAI2B,EAAI,EAAGA,GAAK7B,EAAMI,EAAEF,EAAIF,EAAMC,EAAEC,IAAK2B,EAAGU,EAAOQ,KAAK,KAEhE,KAGGJ,GAAWF,KACbE,EAAUA,GAAW,EACrBF,EAAUA,GAAW,EACrBH,EAAOS,KAAK,CACV9C,EAAG,CACDE,EAAGE,EACHH,EAAGqC,EAAOjC,QAEZF,EAAG,CACDD,EAAGE,EAAIsC,EAAU,EACjBzC,EAAGqC,EAAOjC,OAASmC,EAAU,MAMnCF,EAAOQ,KAAmB,KAAdH,EAAmBA,EAAY,MAGvCH,EAAS,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAU,IAAKO,EAAGT,EAAOQ,KAAK,KAChE,CACDZ,EAAIY,KAAKR,EACV,CACD,MAAO,CAACJ,EAAKG,EACd,CAiEUW,CADMC,SAASC,eAAenB,IAEnCM,EAASL,EAAG,GAGZrC,EAAOqC,EAAG,GACVmB,EAAU,UAEVC,EAAK,IAAIjC,EACXrB,EAAKJ,EAA2BC,GAIlCG,EAAG,WAAauC,EAGhBe,EAAG/B,WAAWyB,KAAKK,GACnBC,EAAG9B,OAAH,QAAqBxB,EAErB,IAAIuD,EAAQ5C,IAAW2C,EAAI,CACzBE,SAAU,OACVC,SAAS,EACTC,KAAM,WAGRC,OACE,IAAIC,KAAK,CAACnC,EAAK8B,IAAS,CACtBG,KAAM,6BAER,YAEH,CAEM,SAASG,IAA2H,IAAD,yDAAJ,CAAC,EAAG,IAAnGC,mBAAmG,MAArF,GAAqF,EAAjFC,EAAiF,EAAjFA,OAAQlE,EAAyE,EAAzEA,KAAMmE,EAAmE,EAAnEA,SAAmE,IAAzDC,cAAyD,MAAhD,GAAgD,MAA5CC,iBAA4C,aAA1BV,gBAA0B,MAAf,OAAe,EAExIQ,EAAWA,GAAY,cACvBnE,EAAI,YAAOA,IACNsE,QAAQJ,GAEb,IAAK,IAAIjC,EAAIgC,EAAYvD,OAAS,EAAGuB,GAAK,EAAGA,IAC3CjC,EAAKsE,QAAQL,EAAYhC,IAG3B,IAAIuB,EAAU,UACVC,EAAK,IAAIjC,EACXrB,EAAKJ,EAA2BC,GASlC,GAPIoE,EAAO1D,OAAS,IACbP,EAAG,aAAYA,EAAG,WAAa,IACpCiE,EAAOlB,SAAQ,SAAAqB,GACbpE,EAAG,WAAWgD,KAAKrC,IAAW0D,aAAaD,GAC5C,KAGCF,EAAW,CAuBb,IArBA,IAAMI,EAAWzE,EAAK0E,KAAI,SAAAC,GAAG,OAC3BA,EAAID,KAAI,SAAAE,GAEN,OAAW,MAAPA,EACK,CACLC,IAAK,IAEED,EAAIE,WAAW5C,WAAW,GAAK,IAEjC,CACL2C,IAA6B,EAAxBD,EAAIE,WAAWpE,QAGf,CACLmE,IAAKD,EAAIE,WAAWpE,OAGzB,GAjB0B,IAoBzBqE,EAASN,EAAS,GACbxC,EAAI,EAAGA,EAAIwC,EAAS/D,OAAQuB,IACnC,IAAK,IAAI+C,EAAI,EAAGA,EAAIP,EAASxC,GAAGvB,OAAQsE,IAClCD,EAAOC,GAAP,IAAmBP,EAASxC,GAAG+C,GAAZ,MACrBD,EAAOC,GAAP,IAAmBP,EAASxC,GAAG+C,GAAZ,KAIzB7E,EAAG,SAAW4E,CACf,CAGDtB,EAAG/B,WAAWyB,KAAKK,GACnBC,EAAG9B,OAAO6B,GAAWrD,EAErB,IAAIuD,EAAQ5C,IAAW2C,EAAI,CACzBE,SAAUA,EACVC,SAAS,EACTC,KAAM,WAERC,OACE,IAAIC,KAAK,CAACnC,EAAK8B,IAAS,CACtBG,KAAM,6BAFJ,UAIDM,EAJC,YAIWR,GAElB,CAxNDsB,EAAQ,I","file":"static/js/27.6a64db11.chunk.js","sourcesContent":["/* eslint-disable */\nrequire('script-loader!file-saver');\nimport * as XLSX from 'xlsx';\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== '' && cellValue == +cellValue) cellValue = +cellValue;\n\n      //Skip ranges\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n        }\n      });\n\n      //Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      }\n\n      //Handle Value\n      outRow.push(cellValue !== '' ? cellValue : null);\n\n      //Handle Colspan\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n    }\n    out.push(outRow);\n  }\n  return [out, ranges];\n}\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\n      else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n\n  /* original data */\n  var data = oo[0];\n  var ws_name = 'SheetJS';\n\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n  ws['!merges'] = ranges;\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  saveAs(\n    new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }),\n    'test.xlsx'\n  );\n}\n\nexport function export_json_to_excel({ multiHeader = [], header, data, filename, merges = [], autoWidth = true, bookType = 'xlsx' } = {}) {\n  /* original data */\n  filename = filename || 'excel-list';\n  data = [...data];\n  data.unshift(header);\n\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i]);\n  }\n\n  var ws_name = 'SheetJS';\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item));\n    });\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    const colWidth = data.map(row =>\n      row.map(val => {\n        /*先判断是否为null/undefined*/\n        if (val == null) {\n          return {\n            wch: 10\n          };\n        } else if (val.toString().charCodeAt(0) > 255) {\n          /*再判断是否为中文*/\n          return {\n            wch: val.toString().length * 2\n          };\n        } else {\n          return {\n            wch: val.toString().length\n          };\n        }\n      })\n    );\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(\n    new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }),\n    `${filename}.${bookType}`\n  );\n}\n"],"sourceRoot":""}